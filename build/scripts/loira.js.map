{"version":3,"sources":["core/events.ts","core/drawable.ts","core/shape.ts","core/canvas.ts","core/animation.ts","core/controller.ts","core/utils.ts","core/mouse.ts","core/keyboard.ts","core/element.ts","core/common.ts","core/config.ts","core/relations.ts","plugins/usecase.ts","plugins/box.ts","plugins/workflow.ts","plugins/orgchart.ts"],"names":[],"mappings":"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","file":"loira.js","sourcesContent":["namespace Loira.event{\n    export const ERROR_MESSAGE = 'error:message';\n    export const OBJECT_ADDED = 'object:added';\n    export const OBJECT_PRE_ADD = 'object:pre-add';\n    export const RELATION_PRE_ADD = 'relation:pre-add';\n    export const RELATION_ADDED = 'relation:added';\n    export const OBJECT_REMOVED = 'object:removed';\n\n    /**\n     * Objeto que encapsula un click sobre un objeto\n     *\n     * @type object\n     * @property {object} selected - Objeto seleccionado\n     * @property {string} type - Tipo de evento\n     */\n    export class Event{\n    }\n\n    /**\n     * Objeto que encapsula un evento sobre el canvas\n     *\n     * @type object\n     * @property {int} x - Posicion x del puntero\n     * @property {int} y - Posicion y del puntero\n     * @property {string} type - Tipo de evento\n     */\n    export class MouseEvent extends Event{\n        public x: number;\n        public y: number;\n\n        constructor(x: number, y:number){\n            super();\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    /**\n     * Objeto que encapsula un click sobre un objeto\n     *\n     * @type object\n     * @property {object} selected - Objeto seleccionado\n     * @property {string} type - Tipo de evento\n     */\n    export class ObjectEvent extends Event{\n        public selected: Loira.Element;\n        public type: string;\n\n        constructor(selected: Loira.Element) {\n            super();\n            this.selected = selected;\n        }\n    }\n\n    /**\n     * Objeto que encapsula un evento sobre una relacion\n     *\n     * @type object\n     * @property {object} selected - Relacion seleccionada\n     * @property {string} type - Tipo de evento\n     */\n    export class RelationEvent extends Event{\n        public selected: Common.Relation;\n\n        constructor(selectedRel: Common.Relation) {\n            super();\n            this.selected = selectedRel;\n        }\n    }\n\n    export class MessageEvent extends Event{\n        constructor(public message: string){\n            super();\n        }\n    }\n}\n","namespace Loira.drawable{\n    import Region = Loira.util.Region;\n\n    /**\n     * Regions registered\n     */\n    let regions:{[id: string]: Region};\n    let image:HTMLImageElement;\n\n    export function registerMap(path:string, regions:{[id: string] : Region}, callback?:() => void){\n        this.image = new Image();\n        this.image.src = path;\n        this.image.onload = function () {\n            callback();\n        };\n\n        this.regions = regions;\n    }\n\n    export function render(id: string, canvas: CanvasRenderingContext2D, x: number, y: number){\n        let region:Region = this.regions[id];\n        canvas.drawImage(this.image, region.x, region.y, region.width, region.height, x, y, region.width, region.height);\n    }\n\n    export function get(id: string): Region{\n        return this.regions[id];\n    }\n}","namespace Loira.shape {\n    import Point = Loira.util.Point;\n\n    export enum HorizontalAlign {\n        LEFT,\n        CENTER,\n        RIGHT\n    }\n\n    export enum VerticalAlign {\n        TOP,\n        MIDDLE,\n        BOTTOM\n    }\n\n    export function drawRoundRect(ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number){\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        ctx.stroke();\n        ctx.fill();\n    }\n\n    export function drawDiamond(ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number){\n        let xm: number = x + width/2,\n            ym: number = y + height/2,\n            xw: number = x + width,\n            yh: number = y + height;\n\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n\n        ctx.moveTo(xm, y);\n\n        ctx.lineTo(xw, ym);\n        ctx.lineTo(xm, yh);\n        ctx.lineTo(x, ym);\n        ctx.lineTo(xm, y);\n\n        ctx.stroke();\n        ctx.fillStyle = \"#fcf5d9\";\n        ctx.fill();\n    }\n\n    export function drawText(ctx: CanvasRenderingContext2D, text: string, position: Point){\n\n    }\n}\n","/// <reference path=\"mouse.ts\" />\n\n/**\n * Plugin para diseño de diagramas\n * @namespace\n * @license Apache-2.0\n */\nnamespace Loira{\n    import RelationEvent = Loira.event.RelationEvent;\n    import ObjectEvent = Loira.event.ObjectEvent;\n    import Point = Loira.util.Point;\n    import Region = Loira.util.Region;\n\n    export class VirtualCanvas {\n        public x: number = 0;\n        public y: number = 0;\n        public width: number = 0;\n        public height: number = 0;\n        public viewportWidth: number = 0;\n        public viewportHeight: number = 0;\n        public area: number = 0;\n    }\n\n    export class CanvasConfig {\n        public width: number = 0;\n        public height: number = 0;\n        public viewportWidth: number = 0;\n        public viewportHeight: number = 0;\n        public dragCanvas: boolean = false;\n        public controller: Loira.BaseController = null;\n        public readOnly: boolean = false;\n    }\n\n    export enum UserAgent {\n        FIREFOX = 1,\n        IE = 2,\n        CHROME = 3,\n        UNKNOWN = 4\n    }\n\n    class TmpData{\n        public pointer:Point;\n        public transform:string;\n        public globalPointer: Point;\n    }\n\n    class ZoomData{\n        public scrollX: number;\n        public scrollY: number;\n        private _scale: number;\n        private _canvas: Canvas;\n\n        constructor(canvas: Canvas){\n            this._canvas = canvas;\n            this._scale = 1;\n            this.update(1);\n        }\n\n        update(delta:number){\n            this._scale += delta / Math.abs(delta);\n            if (this._scale < 9 && this._scale > 0){\n                this.scrollX = Math.floor(this._canvas.width/20);\n                this.scrollY = Math.floor(this._canvas.height/20);\n            }\n        }\n    }\n\n    function checkUserAgent(): UserAgent{\n        let agent;\n        if (/firefox/i.test(navigator.userAgent)){\n            agent = UserAgent.FIREFOX;\n        } else {\n            agent = UserAgent.UNKNOWN\n        }\n\n        util.logger(LogLevel.SYSTEM, navigator.userAgent);\n        return agent;\n    }\n\n    export class Canvas {\n        /**\n         * @property {Object}  _selected - Objeto que se encuentra seleccionado\n         */\n        private _selected: Loira.Element[] = [];\n        public get selected(): Loira.Element[] {\n            return this._selected;\n        }\n\n        /**\n         * @property {Object}  _tmp - Almacena datos temporales\n         */\n        public _tmp: TmpData = new TmpData();\n        \n        /**\n         * @property { Loira.Element[] } items - Listado de objetos que posee el canvas\n         */\n        public items: Loira.Element[] = [];\n\n        /**\n         * @property {HTMLCanvasElement} _canvas - Puntero al objeto de renderizado de lienzo\n         */\n        public _canvas: HTMLCanvasElement = null;\n\n        /**\n         * @property {HTMLCanvasElement} _background - Imagen de fondo\n         */\n        public _background: HTMLCanvasElement = null;\n\n        public _scrollBar: Common.ScrollBar;\n\n        /**\n         * @property {VirtualCanvas} virtualCanvas - Virtual canvas that contains all information of the size\n         */\n        public virtualCanvas: VirtualCanvas = null;\n\n        /**\n         * @property {String}  defaultRelation - Relacion que se usara por defecto cuando se agregue una nueva union\n         */\n        public defaultRelation: string = null;\n\n        /**\n         * @property {HTMLDivElement}  container - Canvas container\n         */\n        public container: HTMLDivElement = null;\n\n        public _callbacks: any;\n\n        public readOnly: boolean = false;\n\n        private _border: any;\n\n        public _zoom: ZoomData;\n\n        public controller: BaseController;\n\n        public userAgent: UserAgent;\n\n        public width: number;\n\n        public height: number;\n\n        public viewportWidth: number;\n\n        public viewportHeight: number;\n\n        public dragCanvas: boolean;\n\n        public contextMenu: HTMLUListElement;\n\n        public tooltip: HTMLDivElement;\n\n        private textEditor: HTMLTextAreaElement;\n\n        public keyboard: Keyboard;\n\n        public mouse: Mouse;\n\n        /**\n         * Create a new instance of canvas\n         *\n         * @memberof Loira\n         * @class Canvas\n         * @param {object} container Id of the element container or pointer of the container\n         * @param {CanvasConfig} config Canvas configurations\n         */\n        constructor(container: any, config?: CanvasConfig) {\n            if (typeof container === 'string'){\n                this.container = <HTMLDivElement> document.getElementById(container);\n            } else {\n                this.container = container;\n            }\n\n            if (!config){\n                config = new CanvasConfig();\n                config.width = this.container.parentElement.offsetWidth;\n                config.height = this.container.parentElement.offsetHeight;\n            }\n\n            config.viewportWidth = config.viewportWidth || this.container.offsetWidth || this.container.parentElement.offsetWidth || config.width;\n            config.viewportHeight = config.viewportHeight || this.container.offsetHeight || this.container.parentElement.offsetHeight || config.height;\n\n            this.readOnly = config.readOnly || false;\n            this._tmp.pointer = {x: 0, y: 0};\n\n            this._callbacks = {};\n            this.items = [];\n\n            this.width = config.width;\n            this.height = config.height;\n            this.viewportHeight = config.viewportHeight;\n            this.viewportWidth = config.viewportWidth;\n            this.dragCanvas = config.dragCanvas;\n\n            this.defaultRelation = 'Relation.Association';\n\n            this.keyboard = new Keyboard(this);\n            this.mouse = new Mouse(this);\n\n            this.refreshScreen();\n\n            drawable.registerMap(Config.assetsPath, Config.regions, function(){\n            });\n\n            this._zoom = new ZoomData(this);\n\n            this.controller = config.controller || null;\n            if (this.controller){\n                this.controller.bind(this);\n            }\n\n            this.userAgent = checkUserAgent();\n            this.bindResizeWindow();\n\n            this.initializeRefresher();            \n        }\n\n        public iterateSelected(callback: (selected: Loira.Element) => void ): void {\n            if (this._selected.length > 0) {\n                for (let selected of this._selected){\n                    callback(selected);\n                }\n            }\n        }\n\n        public clearSelected(element: Loira.Element = null): void {\n            if (element){\n                for (let iter: number = 0; iter < this._selected.length; iter++){\n                    if (this._selected[iter]._uid === element._uid){\n                        this._selected[iter].isSelected = false;\n                        this._selected.splice(iter, 1);\n\n                        break;\n                    }\n                }\n            } else {\n                for (let item of this._selected){\n                    item.isSelected = false;\n                }\n\n                this._selected = [];\n            }\n        }\n\n        public appendSelected(args: Loira.Element|Loira.Element[], replace: boolean = false): void {\n            let argument: Loira.Element[] = null;\n            if (Object.prototype.toString.call(args) !== '[object Array]'){\n                argument = <Loira.Element[]>[args];\n            } else {\n                argument = <Loira.Element[]>args;\n            }\n\n            if (replace) {\n                this.clearSelected();\n            }\n\n            for (let item of argument){\n                if (!item.isSelected) {\n                    item.isSelected = true;\n                    this._selected.push(item);\n                }\n            }\n        }\n\n        refreshScreen() {\n            this.destroy();\n\n            this.container.style.width = this.container.style.maxWidth = this.viewportWidth + 'px';\n            this.container.style.height = this.container.style.maxHeight = this.viewportHeight + 'px';\n            this.container.style.position = 'relative';\n            this.container.style.overflow = 'hidden';\n\n            this._canvas = this.createHiDPICanvas(this.viewportWidth, this.viewportHeight);\n            this._canvas.style.position = 'absolute';\n            this._canvas.style.left = '0';\n            this._canvas.style.top = '0';\n            this._canvas.style.zIndex = '100';\n            this._canvas.style.backgroundColor = Loira.Config.background;\n            this._canvas.tabIndex = 99;\n\n            this.container.appendChild(this._canvas);\n\n            this.virtualCanvas = {\n                x: 0,\n                y: 0,\n                viewportWidth: this.viewportWidth,\n                viewportHeight: this.viewportHeight,\n                width: this.width,\n                height: this.height,\n                area: this.viewportHeight * this.viewportWidth\n            };\n\n            if (document.defaultView && document.defaultView.getComputedStyle) {\n                this._border = {\n                    paddingLeft: parseInt(document.defaultView.getComputedStyle(this._canvas, null)['paddingLeft'], 10) || 0,\n                    paddingTop: parseInt(document.defaultView.getComputedStyle(this._canvas, null)['paddingTop'], 10) || 0,\n                    borderLeft: parseInt(document.defaultView.getComputedStyle(this._canvas, null)['borderLeftWidth'], 10) || 0,\n                    borderTop: parseInt(document.defaultView.getComputedStyle(this._canvas, null)['borderTopWidth'], 10) || 0\n                }\n            }\n\n            this.bind();\n            this.createHtmlElements();\n\n            this._scrollBar = new Common.ScrollBar(this);\n        }\n\n        /**\n         * Create a canvas with specific dpi for the screen\n         * https://stackoverflow.com/questions/15661339/how-do-i-fix-blurry-text-in-my-html5-canvas/15666143#15666143\n         * @param width Width of the canvas\n         * @param height Height of the canvas\n         * @param ratio Ratio of dpi\n         * @returns {HTMLCanvasElement}\n         */\n        private createHiDPICanvas(width: number, height: number, ratio?: number) {\n            let PIXEL_RATIO: number = (function(): number{\n                let ctx: CanvasRenderingContext2D = document.createElement(\"canvas\").getContext(\"2d\"),\n                    dpr = window.devicePixelRatio || 1,\n                    bsr = ctx['webkitBackingStorePixelRatio'] ||\n                        ctx['mozBackingStorePixelRatio'] ||\n                        ctx['msBackingStorePixelRatio'] ||\n                        ctx['oBackingStorePixelRatio'] ||\n                        ctx['backingStorePixelRatio'] || 1;\n\n                dpr = dpr < 1? 1: dpr;\n\n                return dpr / bsr;\n            })();\n\n            if (!ratio) {\n                ratio = PIXEL_RATIO;\n            }\n            let canvas : HTMLCanvasElement = document.createElement(\"canvas\");\n            canvas.width = width * ratio;\n            canvas.height = height * ratio;\n            canvas.style.width = width + \"px\";\n            canvas.style.height = height + \"px\";\n            canvas.getContext(\"2d\").setTransform(ratio, 0, 0, ratio, 0, 0);\n            return canvas;\n        }\n\n        updater(): void{\n            util.logger(LogLevel.INFO, 'Draw');\n            let _this = this;\n            let showResizable: boolean = this._selected.length == 1;\n\n            let ctx: CanvasRenderingContext2D = this._canvas.getContext('2d');\n\n            ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n\n            for (let i:number = 0; i < this.items.length; i++) {\n                if (this.items[i].isVisible(this.virtualCanvas)){\n                    ctx.save();\n                    this.items[i].render(ctx, this.virtualCanvas.x, this.virtualCanvas.y);\n                    ctx.restore();\n                }\n            }\n\n            this.iterateSelected(function (selected: Loira.Element) {\n                if (!selected.selectable) { return }\n\n\n                util.logger(LogLevel.INFO, 'Selected');\n                ctx.save();\n                selected.drawSelected(ctx, showResizable);\n                ctx.restore();\n                selected.renderButtons(ctx, _this.virtualCanvas.x, _this.virtualCanvas.y);\n            });\n\n            this._scrollBar.render(ctx);\n\n            if (Loira.Config.showBanner){\n                Loira.Canvas.drawBanner(ctx);\n            }\n        }\n\n        /**\n         * Dibuja las relaciones y simbolos dentro del canvas\n         * @memberof Loira.Canvas#\n         */\n        renderAll(forceRender:boolean = false) {\n            \n        }\n\n        /**\n         * Agrega uno o varios elementos al listado de objetos\n         *\n         * @memberof Loira.Canvas#\n         * @param {Array.<Object>} args Elementos a agregar\n         * @param fireEvent Should fire the events\n         * @fires object:added\n         */\n        add(args: Loira.Element[]|Loira.Element, fireEvent: boolean = true) {\n            if (this.readOnly){return;}\n\n            let _items: Loira.Element[] = this.items;\n            let _this = this;\n            let relation: Common.Relation;\n            let argument: Loira.Element[];\n\n            if (Object.prototype.toString.call(args) !== '[object Array]'){\n                argument = <Loira.Element[]>[args];\n            } else {\n                argument = <Loira.Element[]>args;\n            }\n\n            for (let item of argument){\n                item.attach(_this);\n                if (item.baseType === 'relation') {\n                    relation = <Common.Relation>item;\n\n                    if (!_this.emit(Loira.event.RELATION_PRE_ADD, new RelationEvent(relation))){ return; }\n\n                    let index:number = _items.indexOf(relation.start);\n                    index = index < _items.indexOf(relation.end) ? index : _items.indexOf(relation.end);\n\n                    _items.splice(index, 0, item);\n\n                    /**\n                     * Evento que encapsula la adicion de una relacion del canvas\n                     *\n                     * @event relation:added\n                     * @type { object }\n                     * @property {object} selected - Objeto seleccionado\n                     * @property {string} type - Tipo de evento\n                     */\n                    _this.emit(Loira.event.RELATION_ADDED, new RelationEvent(relation), fireEvent);\n                } else if (item.baseType === 'container') {\n                    _items.splice(0, 0, item);\n                    /**\n                     * Evento que encapsula la agregacion de un objeto del canvas\n                     *\n                     * @event object:added\n                     * @type { object }\n                     * @property {object} selected - Objeto seleccionado\n                     * @property {string} type - Tipo de evento\n                     */\n                    _this.emit('container:added', new ObjectEvent(item), fireEvent);\n                } else {\n                    if (!_this.emit('object:pre-add', new ObjectEvent(item))){ return; }\n\n                    if (item.centerObject) {\n                        item.x = (_this.virtualCanvas.viewportWidth / 2) + _this.virtualCanvas.x - (item.width / 2);\n                        item.y = (_this.virtualCanvas.viewportHeight / 2) + _this.virtualCanvas.y - (item.height / 2);\n                    }\n\n                    _items.push(item);\n                    /**\n                     * Evento que encapsula la agregacion de un objeto del canvas\n                     *\n                     * @event object:added\n                     * @type { object }\n                     * @property {object} selected - Objeto seleccionado\n                     * @property {string} type - Tipo de evento\n                     */\n                    _this.emit('object:added', new ObjectEvent(item), fireEvent);\n                }\n            }\n        }\n\n        /**\n         * Elimina los objetos enviados como argumentos\n         *\n         * @memberof Loira.Canvas#\n         * @fires object:removed\n         */\n        remove(args: Loira.Element[], fireEvent: boolean = true) {\n            let _items:Loira.Element[] = this.items;\n            let _this = this;\n\n            for (let item of args){\n                let toDelete:number[] = [];\n\n                toDelete.push(_items.indexOf(item));\n\n                for (let i:number = 0; i < _items.length; i++) {\n                    if (_items[i].baseType === 'relation') {\n                        let relation = <Common.Relation> _items[i];\n\n                        if (relation.start._uid === item._uid ||\n                            relation.end._uid === item._uid) {\n                            relation.destroy();\n\n                            toDelete.push(i);\n                        }\n                    }\n                }\n\n                toDelete.sort(function (a, b) {\n                    return a - b;\n                });\n\n                for (let i:number = toDelete.length - 1; i >= 0; i--) {\n                    _items.splice(toDelete[i], 1);\n                }\n\n                /**\n                 * Evento que encapsula la eliminacion de un objeto del canvas\n                 *\n                 * @event object:removed\n                 * @type { object }\n                 * @property {object} selected - Objeto seleccionado\n                 * @property {string} type - Tipo de evento\n                 */\n                _this.emit(Loira.event.OBJECT_REMOVED, new ObjectEvent(item), fireEvent);\n            }\n\n            this.clearSelected();\n        }\n\n        removeSelected(fireEvent: boolean = true){\n            this.remove(this._selected, fireEvent);\n        }\n\n        /**\n         * Elimina todos los objetos del canvas\n         *\n         * @memberof Loira.Canvas#\n         */\n        removeAll() {\n            for (let i:number = 0; i < this.items.length; i++) {\n                this.items[i].destroy();\n            }\n            this.items = [];\n            this.clearSelected();\n        }\n\n        /**\n         * Destruye el componente\n         *\n         * @memberof Loira.Canvas#\n         */\n        destroy() {\n            if (this._canvas){\n                this._canvas.onmousemove = null;\n                this._canvas.onkeydown = null;\n                this._canvas.onmousedown = null;\n                this._canvas.onmouseup = null;\n                this._canvas.ondblclick = null;\n                this._canvas['onselectstart'] = null;\n            }\n\n            if (this.contextMenu){\n                this.contextMenu.remove();\n                this.contextMenu = null;\n            }\n\n            if (this.textEditor){\n                this.textEditor.remove();\n                this.textEditor = null;\n            }\n\n            this._canvas = null;\n\n            while(this.container.firstChild){\n                this.container.removeChild(this.container.firstChild);\n            }\n        }\n\n        /**\n         * Agrega un nuevo escuchador al evento especifico\n         *\n         * @memberof Loira.Canvas#\n         * @param { string } evt Nombre del evento que se desea capturar\n         * @param { function } callback Funcion que escucha el evento\n         * @returns { function } Funcion que escucha el evento\n         */\n        on(evt: any, callback: (evt: any) => void): (evt: any) => void {\n            let name: string;\n\n            if (typeof evt === 'string') {\n                if (typeof this._callbacks[evt] === 'undefined') {\n                    this._callbacks[evt] = [];\n                }\n                this._callbacks[evt].push(callback);\n                return callback;\n            } else if (typeof evt === 'object') {\n                for (name in evt) {\n                    if (evt.hasOwnProperty(name)) {\n                        if (typeof this._callbacks[name] === 'undefined') {\n                            this._callbacks[name] = [];\n                        }\n                        this._callbacks[name].push(evt[name]);\n                    }\n                }\n            }\n            return null;\n        }\n\n        /**\n         * Unregister a event\n         *\n         * @param {string} evt - Event's name\n         * @param {function} callback - Funcion a desregistrar\n         */\n        fall(evt: string, callback: (evt: any) => void) {\n            let index = this._callbacks[evt].indexOf(callback);\n            if (index > -1) {\n                this._callbacks[evt].splice(index, 1);\n            }\n        }\n\n        private createHtmlElements(){\n            this.contextMenu = document.createElement('ul');\n            this.contextMenu.className = 'loira-context-menu';\n            this.contextMenu.oncontextmenu = function(){return false;};\n            document.getElementsByTagName('body')[0].appendChild(this.contextMenu);\n\n            this.textEditor = document.createElement('textarea');\n            this.textEditor.className = 'loira-text-editor';\n            document.getElementsByTagName('body')[0].appendChild(this.textEditor);\n\n            this.tooltip = document.createElement('div');\n            this.tooltip.className = 'loira-tooltip';\n            document.getElementsByTagName('body')[0].appendChild(this.tooltip);\n        }\n\n        /**\n         * Enlaza los eventos del canvas al canvas propio del diseñador\n         *\n         * @memberof Loira.Canvas#\n         * @private\n         */\n        private bind() {\n            this.keyboard.bind();\n            this.mouse.bind();\n\n            this._canvas['onselectstart'] = function () {\n                return false;\n            };\n        }\n\n        private bindResizeWindow(){\n            let resizeID: number = -1;\n            let _this = this;\n\n            let resizeHandler = function(){\n                clearTimeout(resizeID);\n                resizeID = setTimeout(function (){\n                    _this.refreshScreen();\n                }, 500);\n            };\n\n            window.removeEventListener('resize', resizeHandler);\n            window.addEventListener('resize', resizeHandler);\n        }\n\n        /**\n         * Emite un evento generado\n         *\n         * @memberof Loira.Canvas#\n         * @param evt Nombre del evento a emitir\n         * @param options Valores enviados junto al evento\n         * @param fireEvent Should fire event\n         */\n        public emit(evt: string, options: Loira.event.Event, fireEvent: boolean = true): boolean {\n            if (fireEvent && typeof this._callbacks[evt] !== 'undefined') {\n                for (let item of this._callbacks[evt]) {\n                    let respo = item.call(this, options);\n                    if (respo === false){\n                        return false;\n                    }\n                }\n            }\n            return true;\n        }\n\n        /**\n         * Obtiene la posicion del mouse relativa al canvas\n         *\n         * @memberof Loira.Canvas#\n         * @param evt Evento de mouse\n         * @returns {{x: number, y: number}} Posicion del mouse relativa\n         */\n        public _getMouse(evt: any): Point {\n            let element: HTMLElement = <HTMLElement> this._canvas,\n                offsetX: number = 0,\n                offsetY: number = 0;\n\n            if (element.offsetParent) {\n                do {\n                    offsetX += element.offsetLeft;\n                    offsetY += element.offsetTop;\n                } while ((element = <HTMLElement> element.offsetParent));\n\n                element = <HTMLElement> this._canvas;\n                do {\n                    if (element.nodeName !== 'BODY'){\n                        offsetY -= element.scrollTop;\n                        offsetX -= element.scrollLeft;\n                    }\n                } while ((element = element.parentElement));\n            }\n            let border = this._border;\n            offsetX += border.paddingLeft;\n            offsetY += border.paddingTop;\n\n            offsetX += border.borderLeft;\n            offsetY += border.borderTop;\n\n            let response: Point = {x: (evt.pageX - offsetX), y: (evt.pageY - offsetY)};\n\n            response.x += this.virtualCanvas.x;\n            response.y += this.virtualCanvas.y;\n\n            return response;\n        }\n\n        private getGlobalPoint(x: number, y: number): Point {\n            let element: HTMLElement = <HTMLElement> this._canvas,\n                offsetX: number = 0,\n                offsetY: number = 0;\n\n            if (element.offsetParent) {\n                do {\n                    offsetX += element.offsetLeft;\n                    offsetY += element.offsetTop;\n                } while ((element = <HTMLElement> element.offsetParent));\n                element = <HTMLElement> this._canvas;\n                do {\n                    if (element.nodeName !== 'BODY'){\n                        offsetY -= element.scrollTop;\n                        offsetX -= element.scrollLeft;\n                    }\n                } while ((element = element.parentElement));\n            }\n            let border = this._border;\n            offsetX += border.paddingLeft;\n            offsetY += border.paddingTop;\n\n            offsetX += border.borderLeft;\n            offsetY += border.borderTop;\n\n            let response: Point = {x: (x + offsetX), y: (y + offsetY)};\n\n            response.x -= this.virtualCanvas.x;\n            response.y -= this.virtualCanvas.y;\n\n            return response;\n        }\n\n        removeRelation(start: Loira.Element, end: Loira.Element){\n            let relations: Common.Relation[] = this.getRelationsFromObject(start, false, true);\n            let toDelete: Common.Relation[] = [];\n\n            for (let relation of relations){\n                if (relation.end == end){\n                    toDelete.push(relation);\n                }\n            }\n\n            if (toDelete.length > 0){\n                this.remove(toDelete, false);\n            }\n        }\n\n        /**\n         * Define the background for the canvas\n         *\n         * @param image Image to set as background\n         * @param resizeToImage Define if the canvas should resize to image size\n         */\n        setBackground(image: HTMLImageElement, resizeToImage: boolean) {\n            this._background = this.createHiDPICanvas(image.width, image.height);\n            this._background.style.position = 'absolute';\n            this._background.style.left = '0';\n            this._background.style.top = '0';\n            this._background.style.zIndex = '0';\n\n            this._background.getContext('2d').drawImage(image, 0, 0);\n            this._canvas.style.backgroundColor = 'transparent';\n\n            if (resizeToImage) {\n                this.virtualCanvas.width = image.width;\n                this.virtualCanvas.height = image.height;\n\n                this._scrollBar = new Common.ScrollBar(this);\n            }\n\n            this.container.insertBefore(this._background, this._canvas);\n        }\n\n        trigger(evt: string, selected?: Loira.Element){\n            this.emit(evt, new ObjectEvent(selected));\n        }\n\n        /**\n         * Clean the background\n         */\n        cleanBackground() {\n            this.container.removeChild(this.container.firstChild);\n            this._canvas.width = this.width;\n            this._canvas.height = this.height;\n            this.container.style.width = this.container.style.maxWidth = this.viewportWidth + 'px';\n            this.container.style.height = this.container.style.maxHeight = this.viewportHeight + 'px';\n            this._canvas.style.backgroundColor = Loira.Config.background;\n        }\n\n        /**\n         * Obtain the linked relations to a object\n         *\n         * @param object {Loira.Element} Objeto del que se obtendra las relaciones\n         * @param onlyIncoming {boolean} Indica si solo se deben listar relaciones entrantes\n         * @param onlyOutgoing {boolean} Indica si solo se deben listar relaciones salientes\n         * @returns {Array}\n         */\n        getRelationsFromObject(object: Loira.Element, onlyIncoming: boolean, onlyOutgoing: boolean): Common.Relation[] {\n            let relations = [];\n            for (let item of this.items) {\n                if (item.baseType === 'relation') {\n                    let rel = <Common.Relation> item;\n                    if (rel.start === object || rel.end === object) {\n                        if (rel.start === object && onlyOutgoing) {\n                            relations.push(item);\n                        } else if (rel.end === object && onlyIncoming) {\n                            relations.push(item);\n                        } else if (!onlyIncoming && !onlyOutgoing) {\n                            relations.push(item);\n                        }\n                    }\n                }\n            }\n\n            return relations;\n        }\n\n        /**\n         * Center the canvas at the given point\n         *\n         * @param x X position\n         * @param y Y position\n         */\n        centerToPoint(x: number, y: number): void{\n            x = x - (this.virtualCanvas.viewportWidth / 2);\n            y = y - (this.virtualCanvas.viewportHeight / 2);\n\n            this._scrollBar.setPosition(x, y);\n        }\n\n        setSelectedElement(element: Element){\n            this.appendSelected(element, true);\n        }\n\n        /**\n         * Get context from the current canvas\n         *\n         * @returns {CanvasRenderingContext2D|null}\n         */\n        getContext(): CanvasRenderingContext2D {\n            return this._canvas.getContext('2d');\n        }\n\n        getImage(padding: number = 0): string{\n            let maxX, maxY, minX, minY, dX, dY: number;\n            let offSetX, offSetY: number;\n            let localItems: Loira.Element[] = this.items.slice(0);\n\n            maxX = maxY = Number.MIN_VALUE;\n            minX = minY = Number.MAX_VALUE;\n\n            for (let element of localItems){\n                if (element.baseType !== 'relation'){\n                    if (element.x < minX){\n                        minX = element.x;\n                    }\n                    if (element.y < minY){\n                        minY = element.y;\n                    }\n\n                    if (element.width + element.x > maxX){\n                        maxX = element.width + element.x;\n                    }\n\n                    if (element.y + element.height > maxY){\n                        maxY = element.y + element.height;\n                    }\n                }\n            }\n\n            dX = maxX - minX + 10 + (padding *2);\n            dY = maxY - minY + 10 + (padding *2);\n\n            let virtual: HTMLCanvasElement = this.createHiDPICanvas(dX, dY, 1);\n            let ctx = virtual.getContext('2d');\n\n            ctx.fillStyle = Config.background;\n            ctx.fillRect(0, 0, dX, dY);\n\n            offSetY = (minY - padding) - 5;\n            offSetX = (minX - padding) - 5;\n\n            for (let i:number = 0; i < localItems.length; i++) {\n                ctx.save();\n\n                localItems[i].render(ctx, offSetX, offSetY);\n\n                ctx.restore();\n            }\n            return virtual.toDataURL(\"image/png\");\n        }\n\n        getElementByPosition(x: number, y: number): Element {\n            let item:Loira.Element;\n            for (let i:number = this.items.length - 1; i >= 0; i--) {\n                item = this.items[i];\n                if (item.isVisible(this.virtualCanvas) && item.checkCollision(x, y)) {\n                    return item;\n                }\n            }\n\n            return null;\n        }\n\n        /**\n         * Draw the banner of the library and the version\n         * @param ctx Context of the canvas\n         */\n        static drawBanner(ctx: CanvasRenderingContext2D): void {\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.15)';\n            ctx.fillRect(0, 0, 114, 16);\n\n            ctx.font = '12px Arial';\n            ctx.fillStyle = \"#FFFFFF\";\n            ctx.fillText('loira-designer v0.5.7', 2, 12);\n        }\n\n        showEditor(region: Region, text: string, callback: (text: string)=> void){\n            let point: Point = this.getGlobalPoint(region.x, region.y);\n\n            this.textEditor.style.top = point.y + 'px';\n            this.textEditor.style.left = point.x + 'px';\n            this.textEditor.style.display = 'block';\n            this.textEditor.style.width = region.width + 'px';\n            this.textEditor.style.height = region.height + 'px';\n            this.textEditor.focus();\n\n            this.textEditor.value = text;\n            let scope = this;\n\n            let listener = this.on('mouse:down', function(){\n                scope.textEditor.style.display = 'none';\n                callback(scope.textEditor.value);\n                scope.fall('mouse:down', listener);\n            });\n        }\n\n        private restore(): void {\n\n        }\n\n        private save(step: number = 1): void {\n\n        }\n\n        public getSelected(): Loira.Element[] {\n            return this._selected;\n        }\n\n        /**\n         * Initialize the refresh screen loop\n         */\n        private initializeRefresher(): void {\n            let animationFrame = (function(){\n                return window.requestAnimationFrame ||\n                        window.webkitRequestAnimationFrame ||\n                        window['mozRequestAnimationFrame'] ||\n                        function(callback){\n                            window.setTimeout(callback, 1000/60);\n                        };\n            })();\n\n            let _this = this;\n\n            let start = function(){\n                _this.updater();\n                animationFrame(start);\n            }\n\n            start();\n        }\n    }\n}\n\n","namespace Loira {\n    export class Animation{\n        private _isRunning: boolean;\n        private _fps: number;\n        private _element: Loira.Element;\n        private _registers: {stepX: number, stepY: number, type: number, times: number}[] = [];\n    \n        constructor(element: Loira.Element) {\n            this._element = element;\n        }\n    \n        moveTo(x: number, y: number, seconds: number = 1){\n            let times: number = this._fps * seconds;\n    \n    \n    \n            this._isRunning = true;\n        }\n    \n        setFps(fps: number) {\n            this._fps = fps;\n        }\n    \n        proccess(): void {\n            if (this._isRunning){\n                if (this._registers.length == 0){\n                    this._isRunning = false;\n                }\n            }\n        }\n    }\n}","namespace Loira{\n    export abstract class BaseController{\n\n        abstract bind(canvas: Canvas);\n\n        abstract load(data: any);\n\n        abstract exportData(): any;\n    }\n}\n","/// <reference path=\"common.ts\" />\n\n/**\n * Clase base para la creacion de nuevos objetos dibujables\n *\n * @memberof Loira\n * @namespace util\n */\nnamespace Loira.util{\n    import TypeLine = Loira.Common.TypeLine;\n    export class BaseOption{\n        x: number = 0;\n        y: number = 0;\n        width?: number = 0;\n        height?: number = 0;\n        centerObject?: boolean = false;\n        maxOutGoingRelation?: number = 0;\n        _canvas?: Loira.Canvas;\n        type?: string;\n        baseType?: string;\n        extras?: any = {};\n        text?: string = '';\n        selectable?: boolean = true;\n        resizable?: boolean = true;\n        draggable?: boolean = true;\n    }\n\n    export class RelOption extends BaseOption{\n        start: Common.Symbol;\n        end: Common.Symbol;\n        text?: string;\n        isDashed?: boolean;\n        points?: Point[];\n        icon?: string;\n        typeLine?: TypeLine;\n    }\n\n    export class Line{\n        constructor(public x1: number,\n                    public y1: number,\n                    public x2: number,\n                    public y2: number){}\n\n        public xm(): number{\n            return this.x2 - this.x1;\n        }\n\n        public ym(): number{\n            return this.y2 - this.y1;\n        }\n    }\n\n    export class Region{\n        height: number;\n        width: number;\n        x: number;\n        y: number;\n    }\n\n    export class Point{\n        x: number;\n        y: number;\n\n        constructor(x?: number, y?: number){\n            this.x = x;\n            this.y = y;\n        }\n    }\n\n    export class Rect{\n        constructor(public x?: number, public y?: number, public width?: number, public height?: number){\n        }\n    }\n\n    export enum Key {\n        ENTER = 13,\n        DELETE = 46,\n        CONTROL = 17,\n        ALT = 18,\n        SHIFT = 16\n    }\n\n    /**\n     * Crea una cadena con caracteres aleatorios\n     *\n     * @param maxLength Longitud de la cadena\n     * @returns {string}\n     */\n    export function createRandom(maxLength:number):string{\n        let text:string = \"\";\n        let possible:string = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n        for( let i:number=0; i < maxLength; i++ )\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n        return text;\n    }\n\n    export function createRandomNumber(negative: boolean): number{\n        return Math.floor(Math.random() * 10000000);\n    }\n\n    /**\n     * Determina la el punto de intereseccion entre 2 lineas\n     *\n     * @param line1 Linea 1\n     * @param line2 Linea 2\n     * @returns {*}\n     */\n    export  function intersectPointLine(line1:Line, line2:Line):any{\n        let den:number = ((line1.y2 - line1.y1) * (line2.x2 - line2.x1)) - ((line1.x2 - line1.x1) * (line2.y2 - line2.y1));\n        if (den === 0) {\n            return false;\n        }\n        let a:number = line2.y1 - line1.y1;\n        let b:number = line2.x1 - line1.x1;\n        let numerator1:number = ((line1.x2 - line1.x1) * a) - ((line1.y2 - line1.y1) * b);\n\n        a = numerator1 / den;\n\n        return {x: line2.x1 + (a * (line2.x2 - line2.x1)), y: line2.y1 + (a * (line2.y2 - line2.y1))};\n    }\n\n    /**\n     * Instancia una clase tomando una cadena como base\n     *\n     * @param str Nombre de la clase, o espacio de nombre a instanciar\n     * @returns {*}\n     */\n    export function stringToFunction(str:string):any {\n        let arr:string[] = str.split(\".\");\n\n        let fn:any = (window || this);\n        for (let part of arr) {\n            fn = fn[part];\n        }\n\n        if (typeof fn !== \"function\") {\n            throw new Error(\"function not found\");\n        }\n\n        return  fn;\n    }\n\n    export function removeWhole(indexes:number[], vector: any[]){\n        indexes.sort(function (a, b) {\n            return a - b;\n        });\n\n        for (let i=indexes.length -1; i >= 0; i--){\n            vector.splice(indexes[i], 1);\n        }\n    }\n\n    export function logger(logLevel: Loira.LogLevel, message?: string, data?: string){\n        // let padStr = function(i){\n        //     return (i < 10)? '0' + i : '' + i;\n        // };\n\n        if (Loira.Config.debug && logLevel <= Loira.Config.logLevel ){\n            console.log('[Loira ' + new Date().getTime() + '] ' + message);\n        }\n    }\n}","/// <reference path=\"utils.ts\" />\n/// <reference path=\"events.ts\" />\n/// <reference path=\"element.ts\" />\n/// <reference path=\"canvas.ts\" />\n/// <reference path=\"config.ts\" />\n/// <reference path=\"common.ts\" />\n\nnamespace Loira{\n    import Key = Loira.util.Key;\n    import MouseEvent = Loira.event.MouseEvent;\n    import ObjectEvent = Loira.event.ObjectEvent;\n    import Point = Loira.util.Point;\n\n    export class Mouse{\n        /**\n         * @property {Boolean}  isDragged - Determina si el usuario esta arrastrando un objeto\n         */\n        public isDragged: boolean = false;\n\n        private stopTimeout: any;\n\n        constructor(private canvas: Canvas){}\n\n        bind(){\n            let _this = this;\n\n            this.canvas._canvas['onmousewheel'] = function(evt){\n                _this.canvas.tooltip.style.display = 'none';\n                _this.onWheel(evt);\n            };\n\n            this.canvas._canvas.onmousedown = function(evt){\n                _this.onDown(evt);\n            };\n\n            this.canvas._canvas.onmousemove = function(evt){\n                _this.onMove(evt);\n            };\n\n            this.canvas._canvas.onmouseup = function(evt){\n                _this.onUp(evt);\n            };\n\n            this.canvas._canvas.onmouseleave = function(evt){\n                _this.onLeave();\n            };\n\n            this.canvas._canvas.oncontextmenu = function(evt){\n                _this.onContextMenu(evt);\n                return false;\n            }\n\n            /**\n             * Capture the global mouse move event for\n             */\n            document.addEventListener('mousemove', function(evt){\n                _this.canvas.tooltip.style.display = 'none';\n                _this.onMoveGlobal(evt);\n            });\n\n            document.addEventListener('mouseup', function(evt){\n                _this.onUpGlobal();\n            });\n        }\n\n        private onDownLocal(evt, isDoubleClick) {\n            let canvas = this.canvas;\n            let real:Point = canvas._getMouse(evt);\n            canvas._tmp.pointer = real;\n\n            if (isDoubleClick) {\n                /**\n                 * Evento que encapsula doble click sobre el canvas\n                 *\n                 * @event mouse:dblclick\n                 * @type { object }\n                 * @property {int} x - Posicion x del puntero\n                 * @property {int} y - Posicion y del puntero\n                 * @property {string} type - Tipo de evento\n                 */\n                canvas.emit('mouse:dblclick', new MouseEvent(real.x, real.y));\n            } else {\n                /**\n                 * Evento que encapsula un click sobre el canvas\n                 *\n                 * @event mouse:down\n                 * @type { object }\n                 * @property {int} x - Posicion x del puntero\n                 * @property {int} y - Posicion y del puntero\n                 * @property {string} type - Tipo de evento\n                 */\n                canvas.emit('mouse:down', new MouseEvent(real.x, real.y));\n            }\n\n            if (!isDoubleClick && !canvas.readOnly) {\n                this.isDragged = true;\n                canvas._canvas.style.cursor = 'move';\n            }\n\n            if (canvas._scrollBar.checkCollision(real.x, real.y)){\n                canvas._tmp.globalPointer = {x: evt.pageX, y: evt.pageY};\n                this.isDragged = true;\n                return;\n            }\n\n            if (canvas.selected.length == 1 && !canvas.readOnly) {\n                let selected = canvas.selected[0];\n                canvas._tmp.transform = selected.getSelectedCorner(real.x, real.y);\n                if (canvas._tmp.transform || selected.callCustomButton(real.x, real.y)) {\n                    switch (canvas._tmp.transform) {\n                        case 'tc':\n                        case 'bc':\n                            canvas._canvas.style.cursor = 'ns-resize';\n                            break;\n                        case 'ml':\n                        case 'mr':\n                            canvas._canvas.style.cursor = 'ew-resize';\n                            break;\n                    }\n                    return;\n                } else {\n                    if (canvas.keyboard.lastKey !== Key.SHIFT){\n                        canvas.clearSelected();\n                        canvas.emit('object:unselected', new MouseEvent(real.x, real.y));\n                    }\n                }\n            }\n\n            let item:Loira.Element;\n            let atLeastOneSelected = false;\n            for (let i:number = canvas.items.length - 1; i >= 0; i--) {\n                item = canvas.items[i];\n                if (item.checkCollision(real.x, real.y)) {\n                    atLeastOneSelected = true;\n                    if (item.isSelected){\n                        if (canvas.keyboard.lastKey === Key.SHIFT){\n                            canvas.clearSelected(item);\n                            canvas.emit('object:unselected', new ObjectEvent(item));\n                        }\n                        break;\n                    }\n\n                    canvas.appendSelected(item, canvas.keyboard.lastKey !== Key.SHIFT);\n\n                    if (item.baseType !== 'relation') {\n                        if (isDoubleClick) {\n                            /**\n                             * Evento que encapsula doble click sobre un objeto\n                             *\n                             * @event object:dblclick\n                             * @type { object }\n                             * @property {object} selected - Objeto seleccionado\n                             * @property {string} type - Tipo de evento\n                             */\n                            canvas.emit('object:dblclick', new ObjectEvent(item));\n                        } else {\n                            util.logger(LogLevel.INFO, 'down');\n                            /**\n                             * Evento que encapsula un click sobre un objeto\n                             *\n                             * @event object:select\n                             * @type { object }\n                             * @property {object} selected - Objeto seleccionado\n                             * @property {string} type - Tipo de evento\n                             */\n                            canvas.emit('object:selected', new ObjectEvent(item));\n                        }\n                        break;\n                    } else {\n                        if (isDoubleClick) {\n                            /**\n                             * Evento que encapsula doble click sobre una relacion\n                             *\n                             * @event relation:dblclick\n                             * @type { object }\n                             * @property {object} selected - Objeto seleccionadonpm\n                             * @property {string} type - Tipo de evento\n                             */\n                            canvas.emit('relation:dblclick', new ObjectEvent(item));\n                        } else {\n                            /**\n                             * Evento que encapsula un click sobre una relacion\n                             *\n                             * @event relation:select\n                             * @type { object }\n                             * @property {object} selected - Objeto seleccionado\n                             * @property {string} type - Tipo de evento\n                             */\n                            canvas.emit('relation:selected', new ObjectEvent(item));\n                        }\n                        break;\n                    }\n                }\n            }\n\n            if (!atLeastOneSelected){\n                canvas.clearSelected();\n                canvas.emit('object:unselected', new ObjectEvent(null));\n            }\n        };\n\n        private onDown(evt){\n            util.logger(LogLevel.INFO,'Mouse');\n            this.canvas.contextMenu.style.display = 'none';\n            this.onDownLocal(evt, false);\n        };\n\n        private onMove(evt){\n            let canvas = this.canvas;\n            let _this = this;\n\n            clearTimeout(this.stopTimeout);\n            this.stopTimeout = setTimeout(function(){\n                _this.onStop(evt);\n            }, 500);\n\n            if (this.canvas.readOnly && !this.canvas._scrollBar.isSelectable()){return;}\n            if (this.isDragged) {\n                let real:Point = canvas._getMouse(evt);\n                let x:number = real.x - canvas._tmp.pointer.x;\n                let y:number = real.y - canvas._tmp.pointer.y;\n\n                if (!canvas._scrollBar.isSelectable()){\n                    /**\n                     * Evento que encapsula el movimiento del mouse sobre el canvas\n                     *\n                     * @event mouse:move\n                     * @type { object }\n                     * @property {int} x - Posicion x del puntero\n                     * @property {int} y - Posicion y del puntero\n                     * @property {string} type - Tipo de evento\n                     */\n                    canvas.emit('mouse:move', new MouseEvent(real.x, real.y));\n                    if (canvas.selected) {\n                        if (canvas._tmp.transform) {\n                            if (canvas.selected[0].baseType !== 'relation') {\n                                x = Math.floor(x);\n                                y = Math.floor(y);\n                                switch (canvas._tmp.transform) {\n                                    case 'tc':\n                                        canvas.selected[0].y += y;\n                                        canvas.selected[0].height -= y;\n                                        break;\n                                    case 'bc':\n                                        canvas.selected[0].height += y;\n                                        break;\n                                    case 'ml':\n                                        canvas.selected[0].x += x;\n                                        canvas.selected[0].width -= x;\n                                        break;\n                                    case 'mr':\n                                        canvas.selected[0].width += x;\n                                        break;\n                                }\n                            } else {\n                                (<Common.Relation>canvas.selected[0]).movePoint(parseInt(canvas._tmp.transform), x, y);\n                            }\n                        } else {\n                            canvas.iterateSelected(function(selected: Loira.Element){\n                                if (selected.draggable){\n                                    selected.x += x;\n                                    selected.y += y;\n\n                                    /**\n                                     * Evento que encapsula el arrastre de un objeto\n                                     *\n                                     * @event object:dragging\n                                     * @type { object }\n                                     * @property {object} selected - Objeto seleccionado\n                                     * @property {string} type - Tipo de evento\n                                     */\n                                    canvas.emit('object:dragging', new ObjectEvent(selected));\n                                }\n                            })\n                        }\n                    } else {\n                        // TODO Verificar cuando se complete el canvas\n                        /*if (_this._config.dragCanvas){\n                         if (_this._canvas && _this._canvasContainer) {\n                         x = x === 0? x : x/Math.abs(x);\n                         y =  y === 0? y : y/Math.abs(y);\n\n                         _this.container.scrollLeft -= _this._zoom.scrollX*x;\n                         _this.container.scrollTop -= _this._zoom.scrollY*y;\n\n                         _this._canvasContainer.x = Math.floor(_this.container.scrollLeft);\n                         _this._canvasContainer.y = Math.floor(_this.container.scrollTop);\n                         }\n                         }*/\n                    }\n                    canvas._tmp.pointer = real;\n                }\n            }\n        };\n\n        private onUp(evt){\n            let real = this.canvas._getMouse(evt);\n            this.canvas._canvas.style.cursor = 'default';\n            this.isDragged = false;\n\n            /**\n             * Evento que encapsula la liberacion del mouse sobre el canvas\n             *\n             * @event mouse:up\n             * @type { object }\n             * @property {int} x - Posicion x del puntero\n             * @property {int} y - Posicion y del puntero\n             * @property {string} type - Tipo de evento\n             */\n            this.canvas.emit('mouse:up', new MouseEvent(real.x, real.y));\n\n            let _canvas = this.canvas;\n\n            this.canvas.iterateSelected(function(selected: Loira.Element){\n                /**\n                 * Evento que encapsula la liberacion de un objeto\n                 *\n                 * @event object:released\n                 * @type { object }\n                 * @property {object} selected - Objeto seleccionado\n                 * @property {string} type - Tipo de evento\n                 */\n                _canvas.emit('object:released', new ObjectEvent(selected));\n                _canvas._tmp.transform = null;\n                selected.recalculateBorders();\n            });\n        };\n\n        private onLeave(){\n            this.isDragged = false;\n            this.canvas._canvas.style.cursor = 'default';\n        }\n\n        private onWheel(evt){\n            if (evt.ctrlKey){\n                this.canvas._zoom.update(evt.deltaY);\n            }else {\n                this.canvas._scrollBar.addMovementWheel(evt.shiftKey, (evt.deltaY/Math.abs(evt.deltaY)));\n            }\n\n            return false;\n        }\n\n        private onMoveGlobal(evt){\n            if (this.canvas._scrollBar.isSelectable()){\n                this.canvas._scrollBar.dragScroll(evt.pageX - this.canvas._tmp.globalPointer.x, evt.pageY - this.canvas._tmp.globalPointer.y);\n\n                this.canvas._tmp.globalPointer = {x: evt.pageX, y: evt.pageY};\n            }\n        }\n\n        private onUpGlobal(){\n            this.canvas._scrollBar.selected = null;\n        }\n\n        private onStop(evt){\n            let point: Point = this.canvas._getMouse(evt);\n            let element = this.canvas.getElementByPosition(point.x, point.y);\n            let canvas = this.canvas;\n            \n            if (element){\n                let tmp = element.getTooltip(point.x, point.y);\n\n                if (typeof tmp === 'string'){\n                    canvas.tooltip.innerHTML = tmp;\n                } else {\n                    canvas.tooltip.appendChild(tmp);\n                }\n\n                canvas.tooltip.style.top = (evt.clientY + 30) + 'px';\n                canvas.tooltip.style.left = evt.clientX + 'px';\n                canvas.tooltip.style.display = 'block';\n\n                canvas.tooltip.style.opacity = '1';\n            }\n        }\n\n        private onContextMenu(evt){\n            let canvas = this.canvas;\n\n            canvas.contextMenu.style.display = 'none';\n            let point: Point = canvas._getMouse(evt);\n            let element: Element = canvas.getElementByPosition(point.x, point.y);\n\n            if (element){\n                let menu: MenuItem[] = element.getMenu(point.x, point.y);\n                if (!menu){\n                    return false;\n                }\n                let menuItem;\n                canvas.contextMenu.innerHTML = '';\n\n                for (let item of menu){\n                    menuItem = document.createElement('li');\n                    if (item){\n                        menuItem.innerHTML = item.text;\n                        menuItem.onclick = function(){\n                            item.callback(this, element);\n                            canvas.contextMenu.style.display = 'none';\n                        };\n                    } else {\n                        menuItem.className = 'null-line';\n                    }\n\n                    canvas.contextMenu.appendChild(menuItem);\n                }\n\n                canvas.contextMenu.style.top = evt.clientY + 'px';\n                canvas.contextMenu.style.left = evt.clientX + 'px';\n                canvas.contextMenu.style.display = 'block';\n\n                canvas.contextMenu.style.opacity = '1';\n            }\n        }\n    }\n}","namespace Loira{\n    import Key = Loira.util.Key;\n\n    export class Keyboard{\n        public lastKey: number;\n\n        /**\n         * Class's constructor\n         * @param canvas Canvas selected\n         */\n        constructor(private canvas: Canvas){}\n\n        bind(){\n            let _this = this;\n            let element = this.canvas._canvas;\n\n            element.onkeydown = function(evt){\n                _this.onKeyDown(evt, false);\n            };\n\n            document.addEventListener('keydown', function(evt){\n                _this.onKeyDown(evt, true);\n            });\n\n            element.onkeyup = function(evt){\n                _this.onKeyUp(evt);\n            };\n\n            document.addEventListener('keyup', function(evt){\n                _this.onKeyUp(evt);\n            });\n        }\n\n        private onKeyDown(evt, isGlobal: boolean){\n            if (evt.keyCode === Key.ALT){return;}\n\n            this.lastKey = evt.keyCode;\n\n            if (!isGlobal){\n                if (this.lastKey === Key.DELETE) {\n                    if (this.canvas.readOnly){return;}\n                    this.canvas.removeSelected(false);\n                }\n            }\n        };\n\n        private onKeyUp = function(evt){\n            if (this.canvas.readOnly){return;}\n            this.LastKey = null;\n        };\n    }\n}","/// <reference path=\"menu.ts\" />\n\nnamespace Loira{\n    import BaseOption = Loira.util.BaseOption;\n    import Region = Loira.util.Region;\n    import Point = Loira.util.Point;\n    import Animation = Loira.Animation;\n\n    /**\n     * Clase base para la creacion de nuevos objetos dibujables\n     *\n     * @memberof Loira\n     * @class Element\n     */\n    export abstract class Element {\n        public _uid: string;\n        public x: number;\n        public y: number;\n        public width: number;\n        public height: number;\n        public centerObject: boolean;\n        public maxIncomingRelation: number;\n        public maxOutGoingRelation: number;\n        public _buttons: any[];\n        protected _canvas: Loira.Canvas;\n        public type: string;\n        public baseType: string;\n        public extras: any;\n        public text: string;\n        public selectable: boolean;\n        public resizable: boolean;\n        public draggable: boolean;\n        public menu: MenuItem[];\n        protected selectedArea: any;\n        public isSelected: boolean;\n        private destinationPoint: Point;\n\n        /**\n         * Inicializa los valores de la clase\n         *\n         * @memberof Loira.Element#\n         * @protected\n         * @param { BaseOption } options Conjunto de valores iniciales\n         */\n        constructor(options: BaseOption) {\n            this._uid = Loira.util.createRandom(8);\n            if (typeof options === 'undefined') {\n                options = new BaseOption();\n            }\n            this.x = 'x' in options ? options.x : 0;\n            this.y = 'y' in options ? options.y : 0;\n            this.width = 'width' in options ? options.width : 0;\n            this.height = 'height' in options ? options.height : 0;\n            this.centerObject = 'centerObject' in options ? options.centerObject : false;\n            this.maxOutGoingRelation = 'maxOutGoingRelation' in options ? options.maxOutGoingRelation : 0;\n            this.extras = 'extras' in options ? options.extras : {};\n            this.text = options.text? options.text : '';\n            this.selectable = options.selectable? options.selectable: true;\n            this.resizable = options.resizable? options.resizable: true;\n            this.draggable = options.draggable? options.draggable: true;\n\n            this._buttons = [];\n            this._canvas = null;\n            this.type = '';\n            this.baseType = '';\n            this.isSelected = false;\n        }\n\n        /**\n         * Renderiza el objeto\n         *\n         * @memberof Loira.Element#\n         * @param { CanvasRenderingContext2D } ctx Context 2d de canvas\n         * @param { number } vX Virtual x pointer\n         * @param { number } vY Virtual y pointer\n         * @protected\n         */\n        render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n        }\n\n        /**\n         * Verifica si el punto dado se encuentra dentro de los limites del objeto\n         *\n         * @memberof Loira.Object#\n         * @param x Posicion x del punto\n         * @param y Posicion y del punto\n         * @returns {boolean}\n         */\n        checkCollision(x: number, y: number): boolean {\n            return (x >= this.x && x <= this.x + this.width && y >= this.y && y <= this.y + this.height);\n        }\n        /**\n         * Agrega iconos laterales del objeto con sus respectivos escuchadores\n         *\n         * @memberof Loira.Object#\n         * @param {Array.<Object>} args Iconos laterales a agregar\n         */\n        on(args: any): void {\n            if (args){\n                args = [].splice.call(arguments, 0);\n                this._buttons = args;\n            } else {\n                this._buttons = [];\n            }\n        }\n\n        /**\n         * Move the object to a position by animating the movement\n         * @param x x pointer\n         * @param y y pointer\n         */\n        moveTo(x: number, y: number, absolute: boolean = false): void {\n            if (absolute){\n                this.destinationPoint.x = x;\n                this.destinationPoint.y = y;\n            } else {\n                this.destinationPoint.x = this.x + x;\n                this.x += x;\n                this.y += y;\n            }\n        }\n\n        /**\n         * Renderiza los iconos de los botones laterales\n         *\n         * @memberof Loira.Object#\n         * @param { CanvasRenderingContext2D } ctx Contexto 2d del canvas\n         * @param { number } vX Virtual x pointer\n         * @param { number } vY Virtual y pointer\n         */\n        public renderButtons(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            let x: number = this.x + this.width + 10;\n            let y: number = this.y;\n\n            x -= vX;\n            y -= vY;\n\n            if (this._buttons.length > 0) {\n                this._buttons.forEach(function (item) {\n                    drawable.render(item.icon, ctx, x, y);\n                    y += drawable.get(item.icon).height + 4;\n                });\n            }\n        }\n\n        /**\n         * Ejecuta el escuchador de algun icono lateral encontrado por el punto\n         *\n         * @memberof Loira.Object#\n         * @param x Posicion x del punto\n         * @param y Posicion y del punto\n         * @returns {boolean}\n         * @private\n         */\n        callCustomButton(x: number, y: number): boolean {\n            let _x: number = this.x + this.width + 10;\n            let _y: number = this.y;\n            let region: Region;\n            for (let item of this._buttons) {\n                region = drawable.get(item.icon);\n                if (_x <= x && x <= _x + region.width && _y <= y && y <= _y + region.height) {\n                    item.click.call(this);\n                    return true;\n                }\n                _y += item.icon.height + 4;\n            }\n            return false;\n        }\n\n        /**\n         * Dibuja el cuadro punteado que contornea al objeto\n         *\n         * @memberof Loira.Object#\n         * @param { CanvasRenderingContext2D } ctx Contexto 2d del canvas\n         * @param { Boolean } showResizable Determines if should draw resizable boxes\n         * @private\n         */\n        drawSelected(ctx: CanvasRenderingContext2D, showResizable: boolean = true) {\n            let x: number = this.x - 2,\n                y: number = this.y - 2,\n                w: number = this.width,\n                h: number = this.height;\n\n            x -= this._canvas.virtualCanvas.x;\n            y -= this._canvas.virtualCanvas.y;\n\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.setLineDash([5, 5]);\n            ctx.strokeStyle = Loira.Config.selected.color;\n            ctx.rect(x, y, w + 4, h + 4);\n            ctx.stroke();\n            ctx.setLineDash([]);\n\n            if (this.resizable && showResizable){\n                ctx.fillStyle = Loira.Config.selected.color;\n                ctx.fillRect(x - 4, y - 4, 8, 8);\n                ctx.fillRect(x + w, y + h, 8, 8);\n                ctx.fillRect(x + w, y - 4, 8, 8);\n                ctx.fillRect(x - 4, y + h, 8, 8);\n                ctx.fillRect(x + w / 2, y - 4, 8, 8);\n                ctx.fillRect(x + w / 2, y + h, 8, 8);\n                ctx.fillRect(x - 4, y + h / 2, 8, 8);\n                ctx.fillRect(x + w, y + h / 2, 8, 8);\n            }\n\n            ctx.strokeStyle = '#000000';\n            ctx.fillStyle = '#000000';\n        }\n\n        /**\n         * Verifica si el punto se encuentra en alguno de los cuadrados de redimension\n         *\n         * @memberof Loira.Object#\n         * @param pX Posicion x del punto\n         * @param pY Posicion y del punto\n         * @returns\n         */\n        getSelectedCorner(pX: number, pY: number): string {\n            if (!this.resizable) {return ''}\n            let x: number = this.x - 2,\n                y: number = this.y - 2,\n                w: number = this.width,\n                h: number = this.height,\n                mw: number = w / 2,\n                mh: number = h / 2;\n            if (x - 4 <= pX && pX <= x + 4 && y - 4 <= pY && pY <= y + 4)\n                return 'tl';\n            if (x + w <= pX && x + w + 8 >= pX && y - 4 <= pY && y + 4 >= pY)\n                return 'tr';\n            if (x + w <= pX && x + w + 8 >= pX && y + h <= pY && y + h + 8 >= pY)\n                return 'br';\n            if (x - 4 <= pX && x + 4 >= pX && y + h <= pY && y + h + 8 >= pY)\n                return 'bl';\n            if (x + mw <= pX && x + mw + 8 >= pX && y - 4 <= pY && y + 4 >= pY)\n                return 'tc';\n            if (x + mw <= pX && x + mw + 8 >= pX && y + h <= pY && y + h + 8 >= pY)\n                return 'bc';\n            if (x - 4 <= pX && x + 4 >= pX && y + mh <= pY && y + mh + 8 >= pY)\n                return 'ml';\n            if (x + w <= pX && x + w + 8 >= pX && y + mh <= pY && y + mh + 8 >= pY)\n                return 'mr';\n            return '';\n        }\n\n        /**\n         * Muestra el objeto si el canvas se encuentra en un contenedor\n         *\n         * @memberof Loira.Element#\n         */\n        show(): void {\n            this._canvas.centerToPoint((this.x + this.width / 2), (this.y + this.height / 2));\n        }\n\n        /**\n         * Recalcula los bordes del objeto\n         *\n         * @memberof Loira.Element#\n         * @abstract\n         */\n        abstract recalculateBorders(): void;\n\n        attach(canvas: Loira.Canvas): void {\n            this._canvas = canvas;\n        }\n\n        isVisible(virtual: VirtualCanvas): boolean{\n            let p1: Point = null,\n                p2: Point = null,\n                a1: Point = null,\n                a2: Point = null;\n\n            if (virtual.area > this.width * this.height){\n                p1 = {x: this.x, y: this.y};\n                p2 = {x: this.x + this.width, y: this.y + this.height};\n                a1 = {x: virtual.x, y: virtual.y};\n                a2 = {x: virtual.x + virtual.viewportWidth, y: virtual.y + virtual.viewportHeight};\n            } else {\n                a1 = {x: this.x, y: this.y};\n                a2 = {x: this.x + this.width, y: this.y + this.height};\n                p1 = {x: virtual.x, y: virtual.y};\n                p2 = {x: virtual.x + virtual.viewportWidth, y: virtual.y + virtual.viewportHeight};\n            }\n\n            if (p1.x > a1.x && p1.x < a2.x && p1.y > a1.y && p1.y <a2.y){\n                return true;\n            } else if (p1.x > a1.x && p1.x < a2.x && p2.y > a1.y && p2.y <a2.y){\n                return true;\n            } else if (p2.x > a1.x && p2.x < a2.x && p1.y > a1.y && p1.y <a2.y){\n                return true;\n            } else if (p2.x > a1.x && p2.x < a2.x && p2.y > a1.y && p2.y <a2.y){\n                return true;\n            }\n\n            return false;\n        }\n\n        destroy(): void {\n            this._canvas = null;\n        }\n\n        getMenu(x: number, y: number): MenuItem[]{\n            return this.menu;\n        }\n\n        getTooltip(x: number, y: number): HTMLElement|string{\n            return 'Tipo: <b>'+this.type+'</b>';\n        }\n    }\n}","namespace Loira.Common{\n    import RelOption = Loira.util.RelOption;\n    import Point = Loira.util.Point;\n    import Line = Loira.util.Line;\n    import Region = Loira.util.Region;\n    import BaseOption = Loira.util.BaseOption;\n    import VirtualCanvas = Loira.VirtualCanvas;\n    import Rect = Loira.util.Rect;\n\n    export enum TypeLine{\n        STRAIGHT = 1,\n        CURVE = 2,\n        CARTESIAN = 3\n    }\n\n    export abstract class Relation extends Loira.Element{\n        public start: Symbol;\n        public end: Symbol;\n        public isDashed: boolean;\n        public points: Point[];\n        public icon: string;\n        public typeLine: TypeLine;\n        public pointMenu: MenuItem[];\n\n        constructor(options: RelOption){\n            super(options);\n\n            this.start = options.start? options.start : null;\n            this.end = options.end? options.end : null;\n            this.isDashed = options.isDashed? options.isDashed : false;\n            this.points = options.points? options.points : [new Point(), new Point()];\n            this.icon = options.icon? options.icon: '';\n            this.typeLine = options.typeLine? options.typeLine: TypeLine.STRAIGHT;\n\n            this.baseType = 'relation';\n\n            let scope = this;\n\n            this.menu = [\n                {text:'Partir', callback: function(){\n                    scope.addPoint();\n                }},\n                {text:'Borrar', callback: function(){\n                    scope._canvas.remove([scope]);\n                }}\n            ];\n\n            this.pointMenu = [\n                {text:'Borrar punto', callback: function(){\n                    scope.removePoint(scope.selectedArea);\n                }}\n            ];\n\n            if (this.start && this.end && this.start._uid === this.end._uid){\n                this.selfRelated();\n            }\n        }\n\n        /**\n         * Renderiza el objeto\n         *\n         * @memberof Common.Relation#\n         * @param { CanvasRenderingContext2D } ctx Context 2d de canvas\n         * @param { number } vX Virtual x pointer\n         * @param { number } vY Virtual y pointer\n         * @protected\n         */\n        public render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            let start:Rect,\n                end:Rect,\n                tmp: number,\n                init: Point,\n                last: Point,\n                xm: number,\n                ym: number,\n                line: Line,\n                delta: number[] = [],\n                distance: number = 0;\n\n            start = new Rect(this.start.x, this.start.y, this.start.width, this.start.height);\n            end = new Rect(this.end.x, this.end.y, this.end.width, this.end.height);\n\n            this.points[0] = {x: start.x + start.width/2, y: start.y + start.height/2};\n            this.points[this.points.length - 1] = {x: end.x + end.width/2, y: end.y + end.height/2};\n            init = this.points[0];\n            last = this.points[1];\n\n            ctx.beginPath();\n            ctx.lineWidth = 1;\n            ctx.moveTo(init.x - vX, init.y - vY);\n\n            if (this.isDashed){\n                ctx.setLineDash([5, 5]);\n            }\n\n            for (let i:number = 0; i < this.points.length; i++){\n                ctx.lineTo(this.points[i].x - vX, this.points[i].y - vY);\n                if (i>0){\n                    delta[i-1] = Math.sqrt(Math.pow((this.points[i].x - this.points[i-1].x), 2) + Math.pow((this.points[i].y - this.points[i-1].y), 2));\n                    distance += delta[i-1];\n                }\n            }\n\n            ctx.stroke();\n            ctx.setLineDash([]);\n\n            if (this.icon){\n                init = this.points[this.points.length - 2];\n                last = this.points[this.points.length - 1];\n\n                xm = (last.x - init.x);\n                ym = (last.y - init.y);\n\n                tmp = Math.atan(ym/xm);\n\n                if (xm<0){\n                    tmp += Math.PI;\n                }\n\n                ctx.translate(last.x - vX, last.y - vY);\n                ctx.rotate(tmp);\n                line = new Line(init.x, init.y, last.x, last.y);\n\n                let region:Region = Loira.drawable.get(this.icon);\n                let border:number = this.end.obtainBorderPos(line, ctx);\n\n                Loira.drawable.render(this.icon, ctx, -(region.width + border), -Math.ceil(region.height/2));\n\n                ctx.rotate(-tmp);\n                ctx.translate(-last.x - vX, -last.y -vY);\n            }\n\n            if (this.text || this.text.length > 0){\n                ctx.font = Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n                let buffE: number = 0;\n                let buffS: number = 0;\n                let d: number = 0;\n\n                /*\n                 * Primero se obtiene el tamanho de la recta visible y se la divide a la mitad(c1), despues se usa como pivot\n                 * el punto inicial y se usa la distancia cubierta por el elemento y se le suma la distancia visible(c1)\n                 * Luego los puntos inicial y final se los trata como un triangulo rectangulo de catetos (a,b,c) y mediante\n                 * interpolacion se obtiene el punto medio.\n                 */\n                if (this.points.length == 2){\n                    init = this.points[0];\n                    last = this.points[1];\n\n                    line = new Line(init.x, init.y, last.x, last.y);\n\n                    buffE = this.end.obtainBorderPos(line, ctx);\n                    buffS = this.start.obtainBorderPos(line, ctx);\n                } else {\n                    buffS = this.start.obtainBorderPos(new Line(this.points[0].x, this.points[0].y, this.points[1].x, this.points[1].y), ctx);\n                    buffE = this.end.obtainBorderPos(new Line(this.points[this.points.length-2].x, this.points[this.points.length-2].y, this.points[this.points.length-1].x, this.points[this.points.length-1].y), ctx);\n\n                    d = ((distance - buffS - buffE) / 2) + buffS;\n                    let i: number = 0;\n\n                    while(d - delta[i] > 0){\n                        d -= delta[i];\n                        i++;\n                    }\n\n                    init = this.points[i];\n                    last = this.points[i+1];\n\n                    if(i!==0){\n                        buffS = 0;\n                    }\n\n                    if(i!==this.points.length -2){\n                        buffE = 0;\n                    }\n                }\n                let a: number = last.x - init.x;\n                let b: number = last.y - init.y;\n                let c: number = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n\n                let c1: number = ((this.points.length == 2)? ((c - buffE - buffS)/2) + buffS: d);\n\n                let b1: number = Math.floor(b/c*c1);\n                let a1: number = Math.floor(a/c*c1);\n\n                tmp = ctx.measureText(this.text).width;\n\n                ctx.fillStyle = Loira.Config.background;\n                ctx.fillRect(init.x + vX + a1 - tmp/2, init.y + vY + b1 - 13, tmp, 12);\n                ctx.fillStyle = \"#000000\";\n\n                ctx.fillText(this.text,\n                    init.x + vX + a1 - tmp/2,\n                    init.y + vY + b1 - 3);\n\n                ctx.font = Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n            }\n        }\n\n        recalculateBorders() {\n        }\n\n        /**\n         * Actualiza los objeto de origen y objetivo de la relacion\n         *\n         * @memberof Common.Relation#\n         * @param { Object } start Objeto origen\n         * @param { Object } end Objeto objetivo\n         * @chainable\n         * @returns {Common.Relation}\n         */\n        update(start, end):Common.Relation{\n            this.start = start;\n            this.end = end;\n\n            if (this.start && this.end && this.start._uid === this.end._uid){\n                this.selfRelated();\n            }\n\n            return this;\n        }\n\n        /**\n         * Verifica si el punto dado se encuentra dentro de los limites del objeto\n         *\n         * @memberof Common.Relation#\n         * @param x Posicion x del punto\n         * @param y Posicion y del punto\n         * @returns {boolean}\n         */\n        checkCollision(x, y): boolean{\n            let init = null,\n                last = null;\n            let xd:number = 0,\n                yd:number = 0;\n            let point1: Point = {x: 0, y: 0};\n            let point2: Point = {x: 0, y: 0};\n            let m:number;\n            let px: number = 0,\n                py: number = 0;\n\n            for (let i:number = 1; i < this.points.length; i++){\n                init = this.points[i - 1];\n                last = this.points[i];\n                point1.x = init.x;\n                point1.y = init.y;\n                point2.y = last.y;\n                point2.x = last.x;\n\n\n                if (init.x > last.x){\n                    point1.x = last.x;\n                    point2.x = init.x;\n                }\n\n                if (init.y > last.y){\n                    point1.y = last.y;\n                    point2.y = init.y;\n                }\n\n                if (x > point1.x - 5 && x < point2.x + 5 && y > point1.y - 5 && y < point2.y + 5){\n                    yd = Math.abs(last.y - init.y);\n                    xd = Math.abs(last.x - init.x);\n\n                    px = Math.abs(x - init.x);\n                    py = Math.abs(y - init.y);\n\n                    if (xd > yd){\n                        m = Math.abs((yd / xd) * px);\n\n                        if ((m === 0 && (py > point1.y && py < point2.y)) || (m > py - 8 && m < py + 8)){\n                            return true;\n                        }\n                    } else {\n                        m = Math.abs((xd / yd) * py);\n\n                        if ((m === 0 && (px > point1.x && px < point2.x)) || (m > px - 8 && m < px + 8)){\n                            return true;\n                        }\n                    }\n                }\n            }\n\n            return false;\n        }\n\n        /**\n         * Dibuja el cuadro punteado que contornea al objeto\n         *\n         * @memberof Common.Relation#\n         * @param { CanvasRenderingContext2D } ctx Contexto 2d del canvas\n         * @private\n         */\n        drawSelected(ctx: CanvasRenderingContext2D): void{\n            ctx.beginPath();\n\n            ctx.fillStyle= Loira.Config.selected.color;\n\n            let x: number = this._canvas.virtualCanvas.x;\n            let y: number = this._canvas.virtualCanvas.y;\n\n            for (let i:number = 0; i < this.points.length; i++){\n                ctx.fillRect(this.points[i].x-4 - x, this.points[i].y-4 -y, 8, 8);\n            }\n\n            ctx.strokeStyle= '#000000';\n        }\n\n        addPoint(): void{\n            let last:Point = this.points[1],\n                init: Point = this.points[0];\n\n            let x: number = Math.round((last.x - init.x)/ 2) + init.x;\n            let y: number = Math.round((last.y - init.y)/ 2) + init.y;\n\n            this.points.splice(1, 0, {x: x, y: y});\n        }\n\n        removePoint(index: number): void{\n            this.points.splice(index, 1);\n        }\n\n        /**\n         * Verifica si el punto se encuentra en alguno de los cuadrados de redimension\n         *\n         * @memberof Common.Relation#\n         * @param pX Posicion x del punto\n         * @param pY Posicion y del punto\n         * @returns {string}\n         */\n        getSelectedCorner(pX: number, pY: number): any{\n            for (let i:number = 1; i < this.points.length - 1; i++){\n                let x = this.points[i].x-4,\n                    y = this.points[i].y-4,\n                    w = x + 8,\n                    h = y + 8;\n                if (pX > x && pX < w && pY > y && pY < h){\n                    return i;\n                }\n            }\n            return false;\n        }\n\n        /**\n         * Mueve un punto de la relacion\n         *\n         * @memberof Common.Relation#\n         * @param point Indice del punto a mover\n         * @param x Delta de x\n         * @param y Delta de y\n         */\n        movePoint(point: number, x: number, y: number): void{\n            this.points[point].x += x;\n            this.points[point].y += y;\n        }\n\n        isVisible(virtual: VirtualCanvas): boolean{\n            return true;\n        }\n\n        public getMenu(x: number, y: number): MenuItem[]{\n            this.selectedArea = this.getSelectedCorner(x, y);\n            return this.selectedArea? this.pointMenu || this.menu : this.menu;\n        }\n\n        move(x: number, y: number): void{\n            if (this.points.length > 2){\n                for (let i=1; i < this.points.length-1; i++){\n                    this.points[i].x += x;\n                    this.points[i].y += y;\n                }\n            }\n        }\n\n        private selfRelated(): void {\n            let widthLeft: number = this.start.x + this.start.width + 30;\n            let heightHalf: number = this.start.y + this.start.height/2;\n\n            this.points = [];\n\n            this.points.push(new Point());\n            this.points.push(new Point(widthLeft, heightHalf));\n            this.points.push(new Point(widthLeft, this.start.y - 30));\n            this.points.push(new Point(this.start.x + this.start.width/2, this.start.y - 30));\n            this.points.push(new Point());\n        }\n    }\n\n    export abstract class Symbol extends Loira.Element{\n\n        constructor(options: Loira.util.BaseOption){\n            super(options);\n\n            let link = this._linkSymbol;\n            this.on({\n                icon: 'arrow',\n                click: link\n            });\n            this.baseType = 'symbol';\n\n            let scope = this;\n\n            this.menu = [\n                {text: Loira.Config.workflow.menu.joinTo, callback: function(){\n                    scope._linkSymbol();\n                }},\n                {text: Loira.Config.workflow.menu.deleteBtn, callback: function(){\n                    scope._canvas.remove([scope]);\n                }}\n            ];\n        }\n\n        /**\n         * Evento que se ejecuta cuando se realiza una relacion entre simbolos\n         *\n         * @memberof Common.Symbol#\n         * @protected\n         */\n        protected _linkSymbol(): void{\n            let $this = this;\n            let  listener = this._canvas.on(\n                'mouse:down', function(evt){\n                    let canvas:Loira.Canvas = $this._canvas;\n                    let countRel:number = canvas.getRelationsFromObject($this, false, true).length;\n\n                    if (!$this.maxOutGoingRelation || (countRel < $this.maxOutGoingRelation)){\n                        for (let item of canvas.items) {\n                            if (item.baseType !== 'relation'){\n                                if(item.checkCollision(evt.x, evt.y)){\n                                    let instance = Loira.util.stringToFunction(canvas.defaultRelation);\n                                    canvas.add(new instance({}).update($this, item));\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    canvas.fall('mouse:down', listener);\n                }\n            );\n        }\n\n        /**\n         * Obtiene la posicion del borde del simbolo interesectado por un relacion (linea)\n         *\n         * @memberof Common.Symbol#\n         * @param points Puntos que forman la recta\n         * @param { CanvasRenderingContext2D } ctx Contexto 2d del canvas\n         * @returns {number} Distancia borde del simbolo\n         */\n        abstract obtainBorderPos(points: Line, ctx: CanvasRenderingContext2D): number;\n\n        protected splitText(ctx: CanvasRenderingContext2D, text: string, padding: number = 10) {\n            let words:string[] = text.split(' ');\n            let buff:string = '';\n            let lines:string[] = [];\n\n            for (let i:number = 0; i < words.length; i++) {\n                if (ctx.measureText(buff + words[i]).width > this.width - padding) {\n                    lines.push(buff);\n                    buff = words[i] + ' ';\n                } else {\n                    buff = buff + ' ' + words[i];\n                }\n            }\n            lines.push(buff);\n\n            return lines;\n        }\n\n        protected drawText(ctx: CanvasRenderingContext2D, line: string, vX: number, vY: number) {\n            let y,\n                xm = (this.x - vX) + this.width / 2,\n                ym = (this.y - vY) + this.height / 2,\n                lines: string[];\n\n            lines = this.splitText(ctx, line);\n\n            y = ym + 3 - ((6 * lines.length + 3 * lines.length) / 2);\n\n            for (let i:number = 0; i < lines.length; i++) {\n                let textW: number = ctx.measureText(lines[i]).width;\n                ctx.fillText(lines[i], xm - textW / 2, y + 3);\n                y = y + Loira.Config.fontSize + 3;\n            }\n        }\n    }\n\n    export class Actor extends Common.Symbol{\n        constructor(options: Loira.util.BaseOption){\n            super(options);\n\n            this.text = options.text? options.text: 'Actor1';\n            this.width = 30;\n            this.height = 85;\n            this.type = 'actor';\n        }\n\n        obtainBorderPos(points: Loira.util.Line, ctx: CanvasRenderingContext2D): number {\n            ctx.font = Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n            let textW: number = ctx.measureText(this.text).width,\n                xm: number = points.x2 - points.x1,\n                ym: number = points.y2 - points.y1;\n\n            if (textW > this.width){\n                this.x = this.x + this.width/2 - textW/2;\n                this.width = textW;\n            }\n\n            let angle:number = Math.atan(ym / xm);\n\n            if (xm<0){\n                angle += Math.PI;\n            }\n\n            let result:Point = null;\n\n            if ((angle > -0.80 && angle < 0.68) || (angle > 2.46 && angle < 4)){\n                result = Loira.util.intersectPointLine(points, new Line(this.x, -100, this.x, 100));\n            }else{\n                result = Loira.util.intersectPointLine(points, new Line(-100, this.y, 100, this.y));\n            }\n\n            return Math.sqrt(Math.pow((result.x - (this.x + this.width/2)), 2) + Math.pow((result.y - (this.y + this.height/2)), 2));\n        }\n\n        public render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            let textW:number = ctx.measureText(this.text).width;\n            if (textW > this.width){\n                this.x = this.x + this.width/2 - textW/2;\n                this.width = textW;\n            }\n\n            let x: number= this.x - vX;\n            let y: number= this.y - vY;\n\n            ctx.fillStyle = Loira.Config.background;\n            ctx.fillRect(x, y, this.width, this.height);\n            ctx.fillStyle = \"#000000\";\n\n            Loira.drawable.render('actor', ctx, x + this.width/2 - 15, y);\n\n            ctx.font = Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n            ctx.fillStyle = \"#000000\";\n\n            ctx.fillText(this.text, x, y+80);\n        }\n\n        recalculateBorders() {\n        }\n    }\n\n    export class ScrollBar extends Loira.Element{\n        private _horPos: number;\n        private _verPos: number;\n        private _horSize: number;\n        private _verSize: number;\n        private _virtual: Loira.VirtualCanvas;\n        public selected: string;\n\n        constructor(canvas: Loira.Canvas){\n            super(new BaseOption());\n            this.type = 'scrollBar';\n\n            this.width = canvas.virtualCanvas.viewportWidth;\n            this.height = canvas.virtualCanvas.viewportHeight;\n\n            this._horPos = canvas.virtualCanvas.x;\n            this._verPos = canvas.virtualCanvas.y;\n            this._horSize = Math.floor(this.width*(this.width / canvas.virtualCanvas.width));\n            this._verSize = Math.floor(this.height*(this.height / canvas.virtualCanvas.height));\n\n            this._virtual = canvas.virtualCanvas;\n            this._canvas = canvas;\n        }\n\n        public render(ctx: CanvasRenderingContext2D): void {\n            let config: any = Loira.Config.scrollBar;\n\n            if (this._virtual.width > this._virtual.viewportWidth){\n                ctx.fillStyle = config.background;\n                ctx.fillRect(0, this.height - config.size, this._virtual.viewportWidth, config.size);\n                ctx.fillStyle = config.color;\n                ctx.fillRect(this._horPos, this.height - config.size, this._horSize, config.size);\n            }\n\n            if (this._virtual.height > this._virtual.viewportHeight){\n                ctx.fillStyle = config.background;\n                ctx.fillRect(this.width - config.size, 0, config.size, this._virtual.viewportHeight);\n                ctx.fillStyle = config.color;\n                ctx.fillRect(this.width - config.size, this._verPos, config.size, this._verSize);\n            }\n\n            ctx.fillStyle = \"#000000\";\n        }\n\n        recalculateBorders() {\n        }\n\n        /**\n         * Verifica si el punto dado se encuentra dentro de los limites del objeto\n         *\n         * @memberof Loira.Object#\n         * @param x Posicion x del punto\n         * @param y Posicion y del punto\n         * @returns {boolean}\n         */\n        checkCollision(x: number, y: number): boolean {\n            let virtual: Loira.VirtualCanvas = this._virtual;\n            let _x: number = x - virtual.x,\n                _y: number = y - virtual.y;\n\n            if (_x > this._horPos && _x < (this._horPos + this._horSize)\n                && _y > (virtual.viewportHeight - Loira.Config.scrollBar.size) && _y < virtual.viewportHeight){\n                this.selected = 'H';\n\n                return true;\n            }\n\n            if (_x > (virtual.viewportWidth - Loira.Config.scrollBar.size) && _x < virtual.viewportWidth\n                && _y > this._verPos && _y < (this._verPos + this._verSize)){\n                this.selected = 'V';\n\n                return true;\n            }\n\n            this.selected = null;\n            return false;\n        }\n\n        addMovement(dir: string, delta: number, inc: number = 30): void{\n            let tmp: number;\n            let virtual: Loira.VirtualCanvas = this._virtual;\n            let background = this._canvas._background;\n\n            if (dir === 'H'){\n                tmp = this._horPos + delta * inc;\n                if (tmp < 0) {\n                    this._horPos = 0;\n                } else if (tmp + this._horSize > virtual.viewportWidth){\n                    this._horPos = virtual.viewportWidth - this._horSize;\n                } else {\n                    this._horPos = tmp;\n                }\n\n                virtual.x = Math.floor(virtual.width * (this._horPos / virtual.viewportWidth));\n\n                if(background){\n                    background.style.marginLeft = '-'+virtual.x+'px';\n                }\n            } else if(dir === 'V') {\n                tmp = this._verPos + delta * inc;\n                if (tmp < 0) {\n                    this._verPos = 0;\n                } else if (tmp + this._verSize > virtual.viewportHeight){\n                    this._verPos = virtual.viewportHeight - this._verSize;\n                } else {\n                    this._verPos = tmp;\n                }\n                virtual.y = Math.floor(virtual.height * (this._verPos / virtual.viewportHeight));\n                if(background){\n                    background.style.marginTop = '-'+virtual.y+'px';\n                }\n            }\n        }\n\n        addMovementWheel(dir: boolean, delta: number, inc: number = 30): void{\n            let tmp: number;\n            let virtual: Loira.VirtualCanvas = this._virtual;\n            let background = this._canvas._background;\n            let realTmp: number = 1;\n\n            if (dir){\n                //realTmp =\n                tmp = this._horPos + Math.round(delta * virtual.viewportWidth * (inc / virtual.width));\n                if (tmp < 0) {\n                    this._horPos = 0;\n                } else if (tmp + this._horSize > virtual.viewportWidth){\n                    this._horPos = virtual.viewportWidth - this._horSize;\n                } else {\n                    this._horPos = tmp;\n                }\n\n                virtual.x = Math.floor(virtual.width * (this._horPos / virtual.viewportWidth));\n\n                if(background){\n                    background.style.marginLeft = '-'+virtual.x+'px';\n                }\n            } else {\n                tmp = this._verPos + Math.round(delta * virtual.viewportHeight * (inc / virtual.height));\n                if (tmp < 0) {\n                    this._verPos = 0;\n                } else if (tmp + this._verSize > virtual.viewportHeight){\n                    this._verPos = virtual.viewportHeight - this._verSize;\n                } else {\n                    this._verPos = tmp;\n                }\n                virtual.y = Math.floor(virtual.height * (this._verPos / virtual.viewportHeight));\n                if(background){\n                    background.style.marginTop = '-'+virtual.y+'px';\n                }\n            }\n        }\n\n        setPosition(x: number, y: number): void{\n            let virtual: Loira.VirtualCanvas = this._virtual;\n            let background = this._canvas._background;\n\n            x = x<0? 0: x;\n            y = y<0? 0: y;\n\n            virtual.x = x;\n            virtual.y = y;\n            this._horPos = Math.floor((virtual.x * virtual.viewportWidth)/ virtual.width);\n            this._verPos  = Math.floor((virtual.y * virtual.viewportHeight)/ virtual.height);\n\n            if(background){\n                background.style.marginTop = '-'+virtual.y+'px';\n                background.style.marginLeft = '-'+virtual.x+'px';\n            }\n        }\n\n        isSelectable(): boolean{\n            return !!this.selected;\n        }\n\n        dragScroll(x: number, y: number): void{\n            this.addMovement(this.selected, this.selected === 'H'? x:y, 1);\n        }\n    }\n}\n","namespace Loira{\n    import Region = Loira.util.Region;\n\n    let _fontSize:number = 12;\n\n    let _fontType:string = 'Arial';\n\n    let _selected:any = {\n        color: '#339966'\n    };\n\n    let _showBanner: boolean = true;\n\n    let _background:string = '#aacccc';\n\n    let _assetsPath:string = '../assets/glyphs.png';\n\n    let _regions: {[id: string] : Region} = {\n        'actor': {x: 0, y: 30, width: 30, height: 60},\n        'spear': {x: 0, y: 0, width: 14, height: 15},\n        'spear1': {x: 0, y: 15, width: 15, height: 15},\n        'spear2': {x: 15, y: 0, width: 15, height: 15},\n        'spear3': {x: 30, y: 15, width: 15, height: 15},\n        'arrow': {x: 15, y: 15, width: 15, height: 15},\n        'start1': {x: 30, y: 15, width: 15, height: 15},\n        'end1': {x: 30, y: 30, width: 15, height: 15},\n        'start2': {x: 30, y: 45, width: 15, height: 15},\n        'end2': {x: 30, y: 60, width: 15, height: 15}\n    };\n\n    let _scrollBar: any = {\n        size: 10,\n        color: 'rgba(255, 255, 255, 0.85)',\n        background: 'rgba(0, 0, 0, 0.15)'\n    };\n\n    let _orgchart: any = {\n        roleWidth: 150\n    };\n\n    let _workflow: any = {\n        menu: {\n            joinTo: 'Unir a...',\n            deleteBtn: 'Borrar',\n            property: 'Propiedades'\n        }\n    };\n\n    export enum LogLevel {\n        INFO = 99,\n        SYSTEM = 2,\n        WARNING = 1,\n        DANGER = 0\n    }\n\n    export module Config{\n        export let fontSize = _fontSize;\n        export let fontType = _fontType;\n        export let selected = _selected;\n        export let background = _background;\n        export let assetsPath = _assetsPath;\n        export let regions = _regions;\n        export let debug = false;\n        export let logLevel = LogLevel.SYSTEM;\n        export let scrollBar = _scrollBar;\n        export let orgChart = _orgchart;\n        export let showBanner = _showBanner;\n        export let workflow = _workflow;\n    }\n}\n","/**\n * Conjunto de relaciones comunes\n *\n * @namespace Relation\n * @license Apache-2.0\n */\nnamespace Relation{\n    import Common = Loira.Common;\n\n    /**\n     * Contiene las funciones para relacion de asociacion\n     *\n     * @class\n     * @memberof Relation\n     * @augments Common.Relation\n     */\n    export class Association extends Common.Relation{\n        constructor(options: Loira.util.RelOption){\n            super(options);\n\n            this.type = 'association';\n        }\n    }\n\n    /**\n     * Contiene las funciones para relacion directa\n     *\n     * @class\n     * @memberof Relation\n     * @augments Common.Relation\n     */\n    export class DirectAssociation extends Common.Relation{\n        constructor(options: Loira.util.RelOption){\n            options.icon = 'spear';\n            super(options);\n\n            this.type = 'direct_association';\n        }\n    }\n\n    /**\n     * Contiene las funciones para relacion de generalizacion\n     *\n     * @class\n     * @memberof Relation\n     * @augments Common.Relation\n     */\n    export class Generalization extends Common.Relation{\n        constructor(options: Loira.util.RelOption){\n            options.icon = 'spear2';\n            super(options);\n\n            this.type = 'generalization';\n        }\n    }\n\n    /**\n     * Contiene las funciones para relacion de realizacion\n     *\n     * @class\n     * @memberof Relation\n     * @augments Common.Relation\n     */\n    export class Realization extends Common.Relation{\n        constructor(options: Loira.util.RelOption){\n            options.icon = 'spear2';\n            options.isDashed = true;\n            super(options);\n\n            this.type = 'realization';\n        }\n    }\n\n    /**\n     * Contiene las funciones para relacion de dependencia\n     *\n     * @class\n     * @memberof Relation\n     * @augments Common.Relation\n     */\n    export class Dependency extends Common.Relation{\n        constructor(options: Loira.util.RelOption){\n            options.icon = 'spear1';\n            options.isDashed = true;\n            super(options);\n\n            this.type = 'dependency';\n        }\n    }\n}\n","/**\n * Diagrama de Caso de uso\n *\n * @namespace\n */\nmodule UseCase{\n    import BaseOption = Loira.util.BaseOption;\n    import RelOption = Loira.util.RelOption;\n    import Common = Loira.Common;\n\n    /**\n     * Simbolo de Caso de uso\n     *\n     * @class\n     * @memberof UseCase\n     * @augments Common.Symbol\n     */\n    export class UseCase extends Common.Symbol {\n        constructor(options: BaseOption) {\n            super(options);\n\n            this.width = 100;\n            this.height = 70;\n            this.text = options.text;\n            this.type = 'use_case';\n        }\n\n        obtainBorderPos(points: Loira.util.Line, ctx: CanvasRenderingContext2D): number {\n            let a: number = this.width/2,\n                b: number = this.height/2,\n                xm: number = points.xm(),\n                ym: number = points.ym();\n            let ee = a*b / Math.sqrt(a*a*ym*ym + b*b*xm*xm);\n\n            return Math.sqrt(Math.pow(ee*ym, 2) + Math.pow(ee*xm, 2));\n        }\n\n        render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            ctx.font = Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n            if (this.text) {\n                let x: number = this.x - vX,\n                    y: number = this.y - vY;\n\n                let kappa = .5522848,\n                    ox = (this.width / 2) * kappa,\n                    oy = (this.height / 2) * kappa,\n                    xe = x + this.width,\n                    ye = y + this.height,\n                    xm = x + this.width / 2,\n                    ym = y + this.height / 2;\n\n                ctx.beginPath();\n                ctx.lineWidth = 2;\n\n                ctx.moveTo(x, ym);\n                ctx.bezierCurveTo(x, ym - oy, xm - ox, y, xm, y);\n                ctx.bezierCurveTo(xm + ox, y, xe, ym - oy, xe, ym);\n                ctx.bezierCurveTo(xe, ym + oy, xm + ox, ye, xm, ye);\n                ctx.bezierCurveTo(xm - ox, ye, x, ym + oy, x, ym);\n                ctx.stroke();\n                ctx.fillStyle = \"#fcf5d9\";\n                ctx.fill();\n                ctx.fillStyle = \"#000000\";\n\n                this.drawText(ctx, this.text, vX, vY);\n            }\n        }\n\n        recalculateBorders() {\n        }\n    }\n\n    /**\n     * Contiene las funciones para relacion de extension\n     *\n     * @class\n     * @memberof UseCase\n     * @augments Common.Relation\n     */\n    export class Extends extends Common.Relation{\n        constructor(options: RelOption){\n            options.icon = 'spear1';\n            options.text = '<< extends >>';\n            options.isDashed = true;\n\n            super(options);\n            this.type = 'extends';\n        }\n    }\n\n    /**\n     * Contiene las funciones para relacion de inclusion\n     *\n     * @class\n     * @memberof UseCase\n     * @augments Common.Relation\n     */\n    export class Include extends Common.Relation{\n        constructor(options: RelOption){\n            options.icon = 'spear1';\n            options.text = '<< include >>';\n            options.isDashed = true;\n\n            super(options);\n            this.type = 'include';\n        }\n    }\n}\n\n","module Box{\n    export class ColorOption extends Loira.util.BaseOption{\n        color: string\n    }\n\n    /**\n     * Class for color square\n     *\n     * @memberof Box\n     * @class Box\n     * @augments Loira.Element\n     */\n    export class Box extends Loira.Element{\n        public color: string;\n\n        constructor(options: ColorOption){\n            super(options);\n\n            this.width = 'width' in options ? options.width : 30;\n            this.height = 'height' in options ? options.height : 30;\n            this.color =  'color' in options ? options.color: 'rgba(0,0,0,0.3)';\n\n            this.baseType = 'box';\n        }\n\n        render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            ctx.fillStyle = this.color;\n            let x: number = this.x - vX,\n                y: number = this.y - vY;\n\n            ctx.fillRect(x, y, this.width, this.height);\n            ctx.fillText(this.text, x, y -10)\n        }\n\n        recalculateBorders() {\n        }\n    }\n}\n","/**\n * Diagrama de flujo de trabajo\n *\n * @namespace\n */\nmodule Workflow{\n    import BaseOption = Loira.util.BaseOption;\n    import Point = Loira.util.Point;\n    import RelOption = Loira.util.RelOption;\n    import Line = Loira.util.Line;\n    import BaseController = Loira.BaseController;\n    import ObjectEvent = Loira.event.ObjectEvent;\n    import RelationEvent = Loira.event.RelationEvent;\n    import Common = Loira.Common;\n\n    const EVT_OPEN_PROPERTY = 'workflow:open-property';\n\n    export class WorkflowOption extends BaseOption{\n        startPoint?: boolean;\n        endPoint?: boolean;\n        key?: string;\n        labelId?: string;\n    }\n\n    export class Controller extends BaseController {\n        private iteratorKey: number=0;\n        private canvas: Loira.Canvas;\n\n        bind(canvas: Loira.Canvas) {\n            let scope = this;\n            this.canvas = canvas;\n\n            canvas.defaultRelation = 'Workflow.Association';\n\n            canvas.on(Loira.event.OBJECT_PRE_ADD, function(evt){\n                /*if (evt.selected.type === 'start_terminator'){\n                    canvas.emit(Loira.event.ERROR_MESSAGE, {message: 'Existe ya un inicio de flujo'});\n                    return false;\n                }*/\n                if (evt.selected.type === 'parallel_start' ||\n                    evt.selected.type === 'parallel_end' ||\n                    evt.selected.type === 'mono_parallel_start' ||\n                    evt.selected.type === 'mono_parallel_end'){\n                    for (let item of canvas.items){\n                        if (item.type == evt.selected.type && item['key'] == evt.selected.key){\n                            canvas.emit(Loira.event.ERROR_MESSAGE, {message: 'Existe un nodo con la misma llave en el diagrama.'});\n                            return false;\n                        }\n                    }\n                }\n            });\n\n            canvas.on(Loira.event.RELATION_PRE_ADD, function(evt){\n                if ((evt.selected.end.type === 'parallel_start' ||\n                    evt.selected.end.type === 'mono_parallel_start') &&\n                    evt.selected.type === 'returns'){\n                    canvas.emit(Loira.event.ERROR_MESSAGE, {message: 'No es posible retornar a un nodo inicio de paralelismo.'});\n                    return false;\n                }\n\n                if ((evt.selected.start.type === 'parallel_start' ||\n                    evt.selected.start.type === 'parallel_end' ||\n                    evt.selected.start.type === 'mono_parallel_start' ||\n                    evt.selected.start.type === 'mono_parallel_end') &&\n                    evt.selected.type === 'returns'){\n                    canvas.emit(Loira.event.ERROR_MESSAGE, {message: 'No es posible retornar desde un nodo de paralelismo.'});\n                    return false;\n                }\n\n                if ((evt.selected.start.type === 'mono_parallel_start') &&\n                    (evt.selected.end.type !== 'process' &&\n                     evt.selected.end.type !== 'decision')){\n                    canvas.emit(Loira.event.ERROR_MESSAGE, {message: 'El siguiente estado de un nodo de paralelismo monotarea debe ser decisi\\u00F3n o proceso.'});\n                    return false;\n                }\n\n                if ((evt.selected.start.type === 'fork_parallel') &&\n                    (evt.selected.type === 'workflow_fork_continuity')){\n\n                    let relations: Common.Relation[] = canvas.getRelationsFromObject(evt.selected.start, false, true);\n\n                    for (let relation of relations){\n                        if (relation.type === 'workflow_fork_continuity'){\n                            canvas.emit(Loira.event.ERROR_MESSAGE, {message: 'Ya existe una relaci\\u00F3n de continuidad para el nodo de bifurcaci\\u00F3n.'});\n                            return false;\n                        }\n                    }\n                }\n            });\n\n            canvas.on(Loira.event.OBJECT_ADDED, function(evt){\n                if ((evt.selected.type === 'parallel_start' || evt.selected.type === 'mono_parallel_start') && !evt.selected.label){\n                    scope.iteratorKey++;\n                    evt.selected.label = scope.iteratorKey;\n                }\n            });\n        };\n\n        load(data: any) {\n        };\n\n        exportData(): any {\n            return undefined;\n        };\n\n        defineLabelId(): void{\n            let data = {};\n\n            for (let item of this.canvas.items){\n                if (item.type === 'parallel_start' || item.type === 'mono_parallel_start'){\n                    if (!data[item['key']]){\n                        data[item['key']] = item['label'];\n                    }\n                }\n            }\n\n            for (let item of this.canvas.items){\n                if (item.type === 'parallel_end' || item.type === 'mono_parallel_end'){\n                    item['label'] = data[item['key']];\n                }\n            }\n        }\n    }\n\n    export abstract class Symbol extends Common.Symbol{\n        protected startPoint: boolean;\n        protected endPoint: boolean;\n\n        constructor(options: WorkflowOption){\n            super(options);\n\n            this.startPoint = options.startPoint? options.startPoint: false;\n            this.endPoint = options.endPoint? options.endPoint: false;\n            let scope = this;\n\n            this.menu = [\n                {text: Loira.Config.workflow.menu.joinTo, callback: function(){\n                    scope._linkSymbol();\n                }},\n                {text: Loira.Config.workflow.menu.deleteBtn, callback: function(){\n                    scope._canvas.remove([scope]);\n                }},\n                /*null,\n                {text: 'Editar texto', callback: function(){\n                    scope._canvas.showEditor({x:scope.x, y: scope.y, width: scope.width, height: scope.height}, scope.text, function (text) {\n                        scope.text = text;\n                    });\n                }},\n                null,\n                {text:Loira.Config.workflow.menu.property, callback: function(){\n                    scope._canvas.emit(EVT_OPEN_PROPERTY, new ObjectEvent(scope));\n                }}*/\n            ];\n        }\n\n        protected _linkSymbol(defaultRelation?: string): void{\n            let $this = this;\n            const nextRelation: string = defaultRelation? defaultRelation : this._canvas.defaultRelation;\n            let  listener = this._canvas.on(\n                'mouse:down', function(evt){\n                    let canvas:Loira.Canvas = $this._canvas;\n\n                    if (!$this.maxOutGoingRelation || (canvas.getRelationsFromObject($this, false, true).length < $this.maxOutGoingRelation)){\n                        for (let item of canvas.items) {\n                            if (item.baseType !== 'relation' && !item['startPoint']){\n                                if(item.checkCollision(evt.x, evt.y) && !$this.endPoint){\n                                    let instance = Loira.util.stringToFunction(nextRelation);\n\n                                    canvas.add(new instance({start: $this, end: item}));\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    canvas.fall('mouse:down', listener);\n                }\n            );\n        }\n    }\n\n    /**\n     * Process symbol\n     *\n     * @class\n     * @memberof Workflow\n     * @augments Common.Symbol\n     */\n    export class Process extends Symbol{\n        borders: any;\n\n        constructor(options: WorkflowOption){\n            options.width = options.width? options.width : 100;\n            options.height = options.height? options.height : 70;\n\n            super(options);\n            this.text = options.text;\n            this.type = 'process';\n            this.borders = {\n                bottomLeft: 0,\n                topLeft: 0,\n                topRight: 0,\n                bottomRight: 0\n            };\n\n            this.recalculateBorders();\n\n            this.maxOutGoingRelation = 1;\n        }\n\n        obtainBorderPos(points: Loira.util.Line, ctx: CanvasRenderingContext2D): number {\n            let xm: number = points.x2 - points.x1,\n                ym: number = points.y2 - points.y1;\n            let angle = Math.atan(ym / xm);\n\n            if (xm<0){\n                angle += Math.PI;\n            }\n\n            let result = {x:100, y:this.y-10};\n\n            if ((angle > this.borders.bottomLeft && angle < this.borders.topLeft) || (angle > this.borders.topRight && angle < this.borders.bottomRight)){\n                result = Loira.util.intersectPointLine(points, new Line(this.x, -100, this.x, 100));\n            }else{\n                result = Loira.util.intersectPointLine(points, new Line(-100, this.y, 100, this.y));\n            }\n\n            let x = result.x - (this.x + this.width/2);\n            let axis = result.y - (this.y + this.height/2);\n\n            return Math.sqrt(Math.pow(x, 2) + Math.pow(axis, 2));\n        }\n\n        render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            ctx.font = Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n\n            ctx.rect(this.x - vX, this.y - vY, this.width, this.height);\n            ctx.stroke();\n            ctx.fillStyle = \"#fcf5d9\";\n            ctx.fill();\n            ctx.fillStyle = \"#000000\";\n\n            this.drawText(ctx, this.text, vX, vY);\n        }\n\n        recalculateBorders() {\n            let xm = Math.round(this.width /2),\n                ym = Math.round(this.height /2);\n\n            this.borders.bottomLeft = Math.atan(-ym / xm);\n            this.borders.topLeft = Math.atan(ym / xm);\n            this.borders.topRight = Math.atan(ym / -xm) + Math.PI;\n            this.borders.bottomRight = Math.atan(-ym / -xm) + Math.PI;\n        }\n    }\n\n    /**\n     * Base symbol for terminators of workflow\n     *\n     * @class\n     * @memberof Workflow\n     * @augments Common.Symbol\n     */\n    export class Terminator extends Symbol{\n        obtainBorderPos(points: Loira.util.Line, ctx: CanvasRenderingContext2D): number {\n            let xm: number = points.x2 - points.x1,\n                ym: number = points.y2 - points.y1;\n\n            let a = this.width/2;\n            let b = this.height/2;\n            let ee = a*b / Math.sqrt(a*a*ym*ym + b*b*xm*xm);\n\n            return Math.sqrt(Math.pow(ee*ym, 2) + Math.pow(ee*xm, 2));\n        }\n\n        render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            ctx.font = Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n\n            let x = this.x - vX;\n            let y = this.y - vY;\n            let xw = x + this.width - 20;\n            let yh = y + this.height;\n\n            x += 20;\n\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n\n            ctx.moveTo(x, y);\n\n            ctx.lineTo(xw, y);\n\n            ctx.bezierCurveTo(xw + 30, y, xw + 30, yh, xw, yh);\n\n            ctx.lineTo(x, yh);\n\n            ctx.bezierCurveTo(x - 30, yh, x -30, y, x, y);\n\n            ctx.stroke();\n            ctx.fillStyle = \"#fcf5d9\";\n            ctx.fill();\n            ctx.fillStyle = \"#000000\";\n\n            this.drawText(ctx, this.text, vX, vY);\n        }\n\n        recalculateBorders() {}\n\n    }\n\n    export class StartTerminator extends Terminator {\n\n        constructor(options: WorkflowOption){\n            options.width = options.width? options.width : 100;\n            options.height = options.height? options.height : 30;\n\n            super(options);\n\n            this.text = 'INICIO';\n            this.startPoint = true;\n            this.maxOutGoingRelation = 1;\n            this.resizable = false;\n\n            this.type = 'start_terminator';\n        }\n    }\n\n    export class EndTerminator extends Terminator {\n\n        constructor(options: WorkflowOption){\n            super(options);\n            this.width = 70;\n            this.height = 30;\n            this.text = 'FIN';\n            this.endPoint = true;\n            this.type = 'end_terminator';\n            this.resizable = false;\n        }\n    }\n\n    /**\n     * Base symbol for terminators of workflow\n     *\n     * @class\n     * @memberof Workflow\n     * @augments Common.Symbol\n     */\n    export class ThreadTerminator extends Symbol{\n        constructor(options: WorkflowOption){\n            super(options);\n            this.width = 70;\n            this.height = 30;\n            this.text = 'FIN';\n            this.endPoint = true;\n            this.type = 'end_thread_terminator';\n            this.resizable = false;\n        }\n\n        obtainBorderPos(points: Loira.util.Line, ctx: CanvasRenderingContext2D): number {\n            let xm: number = points.x2 - points.x1,\n                ym: number = points.y2 - points.y1;\n\n            let a = this.width/2;\n            let b = this.height/2;\n            let ee = a*b / Math.sqrt(a*a*ym*ym + b*b*xm*xm);\n\n            return Math.sqrt(Math.pow(ee*ym, 2) + Math.pow(ee*xm, 2));\n        }\n\n        render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            ctx.font = Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n\n            let x = this.x - vX;\n            let y = this.y - vY;\n            let xw = x + this.width - 20;\n            let yh = y + this.height;\n\n            x += 20;\n\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n\n            ctx.moveTo(x, y);\n\n            ctx.lineTo(xw, y);\n\n            ctx.bezierCurveTo(xw + 30, y, xw + 30, yh, xw, yh);\n\n            ctx.lineTo(x, yh);\n\n            ctx.bezierCurveTo(x - 30, yh, x -30, y, x, y);\n            ctx.setLineDash([5, 5]);\n\n            ctx.stroke();\n            ctx.fillStyle = \"#fcf5d9\";\n            ctx.fill();\n            ctx.fillStyle = \"#000000\";\n\n            this.drawText(ctx, this.text, vX, vY);\n        }\n\n        recalculateBorders() {}\n\n    }\n\n    /**\n     * Data symbol\n     *\n     * @class\n     * @memberof Workflow\n     * @augments Common.Symbol\n     */\n    export class Data extends Symbol{\n        constructor(options: WorkflowOption){\n            options.width = options.width? options.width : 100;\n            options.height = options.height? options.height : 70;\n\n            super(options);\n            this.text = options.text;\n            this.type = 'data';\n        }\n\n        obtainBorderPos(points: Loira.util.Line, ctx: CanvasRenderingContext2D): number {\n            let xm: number = points.x2 - points.x1,\n                ym: number = points.y2 - points.y1;\n            let a = this.width/2;\n            let b = this.height/2;\n            let ee = a*b / Math.sqrt(a*a*ym*ym + b*b*xm*xm);\n\n            return Math.sqrt(Math.pow(ee*ym, 2) + Math.pow(ee*xm, 2));\n        }\n\n        render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            ctx.font = Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n\n            let x = this.x - vX;\n            let y = this.y - vY;\n            let xw = x + this.width;\n            let yh = y + this.height;\n\n            x += 20;\n\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n\n            ctx.moveTo(x, y);\n\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw - 20, yh);\n            ctx.lineTo(x - 20, yh);\n            ctx.lineTo(x, y);\n\n            ctx.stroke();\n            ctx.fillStyle = \"#fcf5d9\";\n            ctx.fill();\n            ctx.fillStyle = \"#000000\";\n\n            this.drawText(ctx, this.text, vX, vY);\n        }\n\n        recalculateBorders() {\n        }\n    }\n\n    export class Decision extends Symbol{\n        constructor(options: WorkflowOption){\n            options.width = options.width? options.width : 100;\n            options.height = options.height? options.height : 70;\n\n            super(options);\n            this.text = options.text;\n            this.type = 'decision';\n        }\n\n        obtainBorderPos(points: Loira.util.Line, ctx: CanvasRenderingContext2D): number {\n            let xm: number = points.x2 - points.x1,\n                ym: number = points.y2 - points.y1;\n            let x = this.x,\n                y = this.y,\n                xP = this.x + this.width/2,\n                yP = this.y + this.height/2,\n                xw = this.x + this.width,\n                yh = this.y + this.height;\n\n            let angle = Math.atan(yP / xm);\n            let result:Point;\n\n            if (xm<0){\n                angle += Math.PI;\n            }\n\n            ym = ym/Math.abs(ym);\n\n            if (angle > 0 && angle < 1.6){\n                if (ym > 0){\n                    result = Loira.util.intersectPointLine(points, new Line(x, yP, xP, y));\n                } else {\n                    result = Loira.util.intersectPointLine(points, new Line(x, yP, xP, yh));\n                }\n            } else {\n                if (ym > 0){\n                    result = Loira.util.intersectPointLine(points, new Line(xP, y, xw, yP));\n                } else {\n                    result = Loira.util.intersectPointLine(points, new Line(xP, yh, xw, yP));\n                }\n            }\n\n            x = result.x - (this.x + this.width/2);\n            y = result.y - (this.y + this.height/2);\n\n            return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))\n        }\n\n        render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            ctx.font = Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n\n            let x = this.x - vX;\n            let y = this.y - vY;\n            Loira.shape.drawDiamond(ctx, x, y, this.width, this.height);\n            ctx.fillStyle = \"#000000\";\n\n            this.drawText(ctx, this.text, vX, vY);\n        }\n\n        recalculateBorders() {\n        }\n    }\n\n    /**\n     * Contiene las funciones para relacion de extension\n     *\n     * @class\n     * @memberof UseCase\n     * @augments Common.Relation\n     */\n    export class Returns extends Common.Relation{\n        constructor(options: RelOption){\n            options.icon = 'spear1';\n            options.text = options.text || '<<returns>>';\n            options.isDashed = true;\n\n            super(options);\n            this.type = 'returns';\n        }\n    }\n\n    export class Association extends Common.Relation {\n        constructor(options: RelOption){\n            options.icon = 'spear';\n\n            super(options);\n            this.type = 'workflow_association';\n        }\n    }\n\n    export abstract class ParallelBase extends Symbol{\n        public label: string;\n        public key: string;\n        protected unDefined: string;\n\n        constructor(options: WorkflowOption){\n            options.width = options.width? options.width : 30;\n            options.height = options.height? options.height : 30;\n            super(options);\n\n            this.unDefined  = 'No definido';\n            this.resizable = false;\n            this.key = options.key;\n            this.label = options.labelId;\n        }\n\n        obtainBorderPos(points: Loira.util.Line, ctx: CanvasRenderingContext2D): number {\n            let xm: number = points.x2 - points.x1,\n                ym: number = points.y2 - points.y1;\n            let x = this.x,\n                y = this.y,\n                xP = this.x + this.width/2,\n                yP = this.y + this.height/2,\n                xw = this.x + this.width,\n                yh = this.y + this.height;\n\n            let angle = Math.atan(yP / xm);\n            let result:Point;\n\n            if (xm<0){\n                angle += Math.PI;\n            }\n\n            ym = ym/Math.abs(ym);\n\n            if (angle > 0 && angle < 1.6){\n                if (ym > 0){\n                    result = Loira.util.intersectPointLine(points, new Line(x, yP, xP, y));\n                } else {\n                    result = Loira.util.intersectPointLine(points, new Line(x, yP, xP, yh));\n                }\n            } else {\n                if (ym > 0){\n                    result = Loira.util.intersectPointLine(points, new Line(xP, y, xw, yP));\n                } else {\n                    result = Loira.util.intersectPointLine(points, new Line(xP, yh, xw, yP));\n                }\n            }\n\n            x = result.x - (this.x + this.width/2);\n            y = result.y - (this.y + this.height/2);\n\n            return Math.sqrt(Math.pow(x, 2) + Math.pow(y, 2))\n        }\n\n        render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            ctx.font = 'bold ' + Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n\n            let x = this.x - vX;\n            let y = this.y - vY;\n            Loira.shape.drawDiamond(ctx, x, y, this.width, this.height);\n\n            this.renderCustom(ctx, x, y);\n        }\n\n        abstract renderCustom(ctx: CanvasRenderingContext2D, vX: number, vY: number): void;\n\n        recalculateBorders() {\n        }\n    }\n\n    export class ParallelStart extends ParallelBase{\n        constructor(options: WorkflowOption){\n            super(options);\n\n            this.type = 'parallel_start';\n            this.key = this.key || Loira.util.createRandom(5);\n            let scope = this;\n\n            this.menu.push(null);\n            this.menu.push({\n                text:'Agregar punto de fin', callback: function(){\n                    scope._canvas.add([new Workflow.ParallelEnd({x: scope.x, y: scope.y + 50, key: scope.key, labelId: scope.label})]);\n                }}\n            );\n        }\n\n        renderCustom(ctx: CanvasRenderingContext2D, x: number, y: number): void{\n            ctx.fillStyle = '#000000';\n            ctx.beginPath();\n            ctx.arc(x + 15, y + 15, 5, 0, 2 * Math.PI, false);\n            ctx.fillStyle = '#FFFFFF';\n            ctx.fill();\n            ctx.lineWidth = 3;\n            ctx.strokeStyle = '#000000';\n            ctx.stroke();\n\n            ctx.fillStyle = '#FF0000';\n            ctx.fillText(this.label || this.unDefined, x + 25, y + Loira.Config.fontSize - 5);\n        }\n    }\n\n    export class ParallelEnd extends ParallelBase{\n        constructor(options: WorkflowOption){\n            super(options);\n\n            this.type = 'parallel_end';\n            this.maxOutGoingRelation = 1;\n            let scope = this;\n\n            this.menu.push(null);\n            this.menu.push({\n                text:'Agregar punto de inicio', callback: function(){\n                    scope._canvas.add([new Workflow.ParallelStart({x: scope.x, y: scope.y + 50, key: scope.key, labelId: scope.label})]);\n                }}\n            );\n        }\n\n        renderCustom(ctx: CanvasRenderingContext2D, x: number, y: number): void{\n            ctx.beginPath();\n            ctx.arc(x + 15, y + 15, 5, 0, 2 * Math.PI, false);\n            ctx.fillStyle = '#000000';\n            ctx.fill();\n            ctx.lineWidth = 3;\n            ctx.strokeStyle = '#000000';\n            ctx.stroke();\n\n            ctx.fillStyle = '#FF0000';\n            ctx.fillText(this.label || this.unDefined, x + 25, y + Loira.Config.fontSize - 5);\n        }\n    }\n\n    export class MonoParallelStart extends ParallelBase{\n        constructor(options: WorkflowOption){\n            super(options);\n\n            this.type = 'mono_parallel_start';\n            this.key = this.key || Loira.util.createRandom(5);\n            let scope = this;\n            this.maxOutGoingRelation = 1;\n\n            this.menu.push(null);\n            this.menu.push({\n                text:'Agregar punto de fin', callback: function(){\n                    scope._canvas.add([new Workflow.MonoParallelEnd({x: scope.x, y: scope.y + 50, key: scope.key, labelId: scope.label})]);\n                }}\n            );\n        }\n\n        renderCustom(ctx: CanvasRenderingContext2D, x: number, y: number): void{\n            ctx.fillStyle = '#000000';\n            ctx.beginPath();\n            ctx.rect(x + 10, y + 10, 10, 10);\n            ctx.fillStyle = '#FFFFFF';\n            ctx.fill();\n            ctx.lineWidth = 3;\n            ctx.strokeStyle = '#000000';\n            ctx.stroke();\n\n            ctx.fillStyle = '#FF0000';\n            ctx.fillText(this.label || this.unDefined, x + 25, y + Loira.Config.fontSize - 5);\n        }\n    }\n\n    export class MonoParallelEnd extends ParallelBase{\n        constructor(options: WorkflowOption){\n            super(options);\n\n            this.type = 'mono_parallel_end';\n            this.maxOutGoingRelation = 1;\n            let scope = this;\n\n            this.menu.push(null);\n            this.menu.push({\n                text:'Agregar punto de inicio', callback: function(){\n                    scope._canvas.add([new Workflow.MonoParallelStart({x: scope.x, y: scope.y + 50, key: scope.key, labelId: scope.label})]);\n                }}\n            );\n        }\n\n        renderCustom(ctx: CanvasRenderingContext2D, x: number, y: number): void{\n            ctx.beginPath();\n            ctx.rect(x + 10, y + 10, 10, 10);\n            ctx.fillStyle = '#000000';\n            ctx.fill();\n            ctx.lineWidth = 3;\n            ctx.strokeStyle = '#000000';\n            ctx.stroke();\n\n            ctx.fillStyle = '#FF0000';\n            ctx.fillText(this.label || this.unDefined, x + 25, y + Loira.Config.fontSize - 5);\n        }\n    }\n\n    export class Fork extends ParallelBase{\n        constructor(options: WorkflowOption){\n            super(options);\n\n            this.type = 'fork_parallel';\n            this.key = this.key || Loira.util.createRandom(5);\n            let scope = this;\n\n            this.menu.push(null);\n            this.menu.push({\n                text:'Agregar via de continuidad', callback: function(){\n                    scope._linkSymbol('Workflow.ForkContinuity');\n                }}\n            );\n        }\n\n        renderCustom(ctx: CanvasRenderingContext2D, x: number, y: number): void{\n            ctx.fillStyle = '#000000';\n            ctx.beginPath();\n            ctx.moveTo(x + 15, y + 8);\n            ctx.lineTo(x + 8, y + 20);\n            ctx.moveTo(x + 15, y + 10);\n            ctx.lineTo(x + 15, y + 20);\n            ctx.moveTo(x + 15, y + 10);\n            ctx.lineTo(x + 22, y + 20);\n            ctx.lineWidth = 3;\n            ctx.strokeStyle = '#000000';\n            ctx.stroke();\n        }\n    }\n\n    export class ForkContinuity extends Workflow.Association {\n        constructor(options: RelOption){\n            options.icon = 'arrow';\n            options.isDashed = true;\n\n            super(options);\n            this.type = 'workflow_fork_continuity';\n        }\n    }\n}\n","module OrgChart{\n    import BaseController = Loira.BaseController;\n    import RelOption = Loira.util.RelOption;\n    import Point = Loira.util.Point;\n    import fontSize = Loira.Config.fontSize;\n    import Rect = Loira.util.Rect;\n    import Common = Loira.Common;\n\n    let levelColor: string[] = ['#124FFD', '#FF4FFD', '#12003D'];\n    let levelHeight: number[];\n\n    export class RoleOption extends Loira.util.BaseOption{\n        id: string;\n        parent: OrgChart.Role;\n        name: string;\n        title: string;\n        personName: string;\n        isDuplicate: boolean;\n    }\n\n    export class Group {\n        role: Role;\n        parent: Group;\n        children: Group[] = [];\n        x: number;\n        y: number;\n        width: number;\n        height: number;\n        level: number;\n\n        constructor(role: Role){\n            this.role = role;\n            this.height = 40;\n        }\n\n        recalculate(level: number = 0) {\n            this.width = 0;\n            this.level = level;\n            let nextLevel: number = level + 1;\n\n            if (levelHeight.length <= level){\n                levelHeight.push(this.role.height);\n            }\n\n            for (let i=0; i<this.children.length;i++){\n                let child:Group = this.children[i];\n                child.x = this.x + this.width;\n                child.recalculate(nextLevel);\n                this.width += child.width;\n            }\n\n            if (this.width === 0){\n                this.width = this.role.width + 10;\n            }\n\n            this.role.x = Math.floor(this.width/2 - this.role.width/2) + this.x;\n            if (!this.role.isDuplicate){\n                this.role.color = levelColor[level];\n            }\n            this.role.level = level;\n\n            if (levelHeight[level] < this.role.height){\n                levelHeight[level] = this.role.height;\n            }\n        }\n\n        getAllChildren(): Group[] {\n            let children: Group[] = [];\n\n            if (this.children.length > 0) {\n                for (let i: number = 0; i < this.children.length; i++){\n                    let records: Group[] = this.children[i].getAllChildren();\n                    children.push(this.children[i]);\n                    for (let j: number =0;j < records.length; j++){\n                        children.push(records[j]);\n                    }\n                }\n            }\n\n            return children;\n        }\n\n        getAllParent(): Group[] {\n            let parent: Group[] = [];\n            let gr: Group = this;\n\n            while (gr.parent){\n                parent.push(gr.parent);\n                gr = gr.parent;\n            }\n\n            return parent;\n        }\n    }\n\n    /**\n     * Controller that manage the events for the organization chart\n     */\n    export class Controller extends BaseController{\n        private roots: Group[] = [];\n        public elements: Group[] = [];\n        private autoRefresh: boolean;\n        private canvas: Loira.Canvas;\n\n        constructor(colors: string[] = null, autoRefresh: boolean = true){\n            super();\n            if (colors){\n                levelColor = colors;\n            }\n\n            this.autoRefresh = autoRefresh;\n        }\n\n        bind(canvas: Loira.Canvas) {\n            let $this = this;\n\n            this.canvas = canvas;\n            canvas.defaultRelation = 'OrgChart.Relation';\n\n            canvas.on('object:added', function(evt: Loira.event.ObjectEvent){\n                let group: Group = new Group(<Role>evt.selected);\n\n                $this.roots.push(group);\n                $this.elements.push(group);\n\n                if ($this.autoRefresh){\n                    $this.reorderElements();\n                }\n            });\n\n            canvas.on('relation:pre-add', function(evt: Loira.event.RelationEvent){\n                let relations: Common.Relation[] = canvas.getRelationsFromObject(evt.selected.start, false, true);\n\n                for (let relation of relations){\n                    if (relation.end == evt.selected.end){\n                        return false;\n                    }\n                }\n\n                let child = $this.getGroup(<Role>evt.selected.end, $this.elements).item;\n                if (child){\n                    let listChild: Group[] = child.getAllChildren();\n                    listChild.push(child);\n                    for (let i: number = 0; i<listChild.length;i++){\n                        if (listChild[i].role.id === (<Role>evt.selected.start).id && listChild[i].role != evt.selected.start){\n                            return false;\n                        }\n                    }\n                }\n            });\n\n            canvas.on('object:selected', function(evt: Loira.event.ObjectEvent){\n                let role: Role = <Role>evt.selected;\n\n                if (role.isDuplicate){\n                    canvas.centerToPoint(role.rolePrimary.x, role.rolePrimary.y);\n                    canvas.setSelectedElement(role.rolePrimary);\n                    setTimeout(function () {\n                        canvas.trigger('object:selected', role.rolePrimary);\n                    }, 300);\n                }\n            });\n\n            canvas.on('relation:added', function(evt: Loira.event.RelationEvent){\n                let index: number = $this.getGroup(<Role>evt.selected.end, $this.roots).index;\n\n                let child = $this.getGroup(<Role>evt.selected.end, $this.elements).item;\n                let item = $this.getGroup(<Role>evt.selected.start, $this.elements).item;\n\n                if (index>=0) {\n                    $this.roots.splice(index, 1);\n                    if (item.parent == child){ //If new parent was a child from the new child\n                        $this.roots.push(item);\n                    }\n                } else {\n                    let children: Group[] = child.parent.children;\n                    index = $this.getGroup(child.role, children).index;\n                    children.splice(index, 1);\n\n                    let relations: Common.Relation[] = canvas.getRelationsFromObject(evt.selected.end, true, false);\n                    let toDelete: Common.Relation[] = [];\n\n                    for (let relation of relations){\n                        if (relation.start != item.role){\n                            toDelete.push(relation);\n                        }\n                    }\n\n                    if (toDelete.length > 0){\n                        canvas.remove(toDelete, false);\n                    }\n                }\n\n                if (item.parent == child){\n                    item.parent = child.parent;\n                    index = $this.getGroup(item.role, child.children).index;\n                    child.children.splice(index, 1);\n\n                    if (item.parent){\n                        item.parent.children.push(item);\n                        let option = new RelOption();\n                        option.start = item.parent.role;\n                        option.end = item.role;\n                        let relation = new OrgChart.Relation(option);\n                        canvas.add([relation], false);\n                    }\n                    canvas.removeRelation(child.role, item.role);\n                }\n\n                child.parent = item;\n                item.children.push(child);\n\n                if ($this.autoRefresh){\n                    $this.reorderElements();\n                }\n            });\n\n            canvas.on('object:removed', function(evt: Loira.event.ObjectEvent){\n                let relation: Common.Relation;\n                let group: Group;\n                let index: number;\n\n                if (evt.selected.baseType === 'relation'){\n                    relation = <Common.Relation> evt.selected;\n                    group = $this.getGroup(<Role>relation.end, $this.elements).item;\n                } else {\n                    index =  $this.getGroup(<Role>evt.selected, $this.elements).index;\n                    group = $this.elements[index];\n                    $this.elements.splice(index, 1);\n                    let children = group.getAllChildren();\n                    let roles: Role[] = [];\n                    let toDelete: number[] = [];\n\n                    for (let i = 0; i< children.length; i++){\n                        toDelete.push($this.elements.indexOf(children[i]));\n                        roles.push(children[i].role);\n                    }\n\n                    Loira.util.removeWhole(toDelete, $this.elements);\n                    canvas.remove(roles, false);\n                }\n\n                if (group.parent){\n                    index = $this.getGroup(group.role, group.parent.children).index;\n                    group.parent.children.splice(index, 1);\n                } else {\n                    index = $this.getGroup(group.role, $this.roots).index;\n                    $this.roots.splice(index, 1);\n                }\n\n                if (relation){\n                    group.parent = null;\n                    $this.roots.push(group);\n                }\n\n                if ($this.autoRefresh){\n                    $this.reorderElements();\n                }\n            });\n        }\n\n        load(data: any){\n            let option: RoleOption;\n            let group: Group;\n            let optionRel: RelOption;\n            let elements: Role[] = [];\n            let relations: Relation[] = [];\n            let readOnly: boolean = this.canvas.readOnly;\n\n            this.canvas.readOnly = false;\n\n            for(let record of data){\n                option = new RoleOption();\n                option.id = record.id? record.id.toString(): '';\n                option.personName = record.personName? record.personName.toString(): null;\n                option.title = record.title? record.title.toString() : null;\n\n                if (this.getGroupById(option.id).item){\n                    option.isDuplicate = true;\n                }\n\n                group = new Group(new Role(option));\n\n                if (readOnly){\n                    group.role.on(null);\n                }\n\n                if (record.parent){\n                    let parent = this.getGroupById(record.parent?record.parent.toString():'').item;\n                    parent.children.push(group);\n                    group.parent = parent;\n\n                    optionRel = new RelOption();\n                    optionRel.start = parent.role;\n                    optionRel.end = group.role;\n\n                    relations.push(new Relation(optionRel));\n                } else {\n                    this.roots.push(group);\n                }\n\n                this.elements.push(group);\n                elements.push(group.role);\n            }\n\n            this.canvas.add(elements, false);\n            this.canvas.add(relations, false);\n\n            this.canvas.readOnly = readOnly;\n        }\n\n        exportData(): {id: string, parent: string, level: number}[]{\n            let data: {id: string, parent: string, level: number}[]= [];\n\n            for (let element of this.elements){\n                let parent = element.parent;\n                data.push({id: element.role.id, level: element.role.level, parent: (parent? parent.role.id : null)});\n            }\n            return data;\n        }\n\n        reorderElements() {\n            let x: number = 0;\n            levelHeight = [];\n\n            for(let root of this.roots){\n                root.x = x;\n                root.recalculate();\n                x += root.width;\n            }\n\n            levelHeight[0] += 30;\n            for(let i:number = 1; i<levelHeight.length; i++){\n                levelHeight[i] += levelHeight[i-1] + 30;\n            }\n\n            for (let i:number = 0; i<this.elements.length; i++){\n                let group: Group = this.elements[i];\n                group.role.y = (group.level === 0)? 10 : levelHeight[group.level -1];\n            }\n        }\n\n        /**\n         * Get a group by a role\n         * @param role Role to search\n         * @param groups List of groups to search\n         * @returns {{item: Group, index: number}}\n         */\n        getGroup(role: Role, groups?: Group[]): {item: Group, index: number}{\n            if (!groups){\n                groups = this.elements;\n            }\n\n            for(let i=0;i<groups.length;i++){\n                if (groups[i].role == role){\n                    return {item: groups[i], index: i};\n                }\n            }\n            return {item: null, index: -1};\n        }\n\n        /**\n         * Get a group by a role\n         * @param id Role to search\n         * @param groups List of groups to search\n         * @returns {object}\n         */\n        getGroupById(id: string, groups?: Group[]): {item: Group, index: number}{\n            if (!groups){\n                groups = this.elements;\n            }\n            id = id.trim();\n\n            for(let i=0;i<groups.length;i++){\n                if (id !== '' && groups[i].role.id == id){\n                    return {item: groups[i], index: i};\n                }\n            }\n            return {item: null, index: -1};\n        }\n    }\n\n    /**\n     * Class for organization chart\n     *\n     * @memberof OrgChart\n     * @class Role\n     * @augments Loira.Element\n     */\n    export class Role extends Common.Symbol{\n        public color: string;\n        public parent: OrgChart.Role;\n        public title: string;\n        public personName: string;\n        public level: number;\n        public id: string;\n        public isDuplicate: boolean;\n        public rolePrimary: OrgChart.Role;\n\n        constructor(options: RoleOption){\n            super(options);\n\n            this.width = Loira.Config.orgChart.roleWidth;\n            this.height = 20;\n\n            this.parent = options.parent;\n            this.title = options.title;\n            this.resizable = false;\n            this.draggable = false;\n            this.id = options.id;\n            this.personName = options.personName? options.personName : '';\n            this.isDuplicate = options.isDuplicate? options.isDuplicate : false;\n\n            this.type = 'role';\n        }\n\n        render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void {\n            super.render(ctx, vX, vY);\n            let pX: number = this.x - vX,\n                pY: number = this.y - vY;\n\n            let y,\n                xm = pX + this.width / 2,\n                height: number = 0;\n            let personData,\n                titleData;\n\n            if (this.personName){\n                personData = {\n                    fontSize: Loira.Config.fontSize,\n                    lines: super.splitText(ctx, this.personName)\n                };\n\n                height = (personData.fontSize + 3) * personData.lines.length + 5;\n            }\n\n            if (this.title){\n                titleData = {\n                    fontSize: Loira.Config.fontSize - (personData? 3: 0),\n                    lines: super.splitText(ctx, this.title)\n                };\n\n                height += (titleData.fontSize + 3) * titleData.lines.length + 5;\n            }\n\n            y = pY + Loira.Config.fontSize;\n\n            this.height = height;\n\n            let radius = 5;\n            let shadowColor: string;\n            let shadowBlur: number;\n\n            ctx.fillStyle = this.isDuplicate? '#000000' : this.color;\n            ctx.lineWidth= 4;\n\n            if (!this.isSelected){\n                shadowColor = '#000000';\n                shadowBlur=10;\n                ctx.strokeStyle = '#000000';\n            } else {\n                shadowColor = '#00c0ff';\n                shadowBlur=20;\n                ctx.strokeStyle = '#00c0ff';\n                this.isSelected = false;\n            }\n\n            // Blocked to Firefox because performance leaks\n            if (this._canvas.userAgent != Loira.UserAgent.FIREFOX){\n                ctx.shadowColor = shadowColor;\n                ctx.shadowBlur = shadowBlur;\n            }\n\n            Loira.shape.drawRoundRect(ctx, pX, pY, this.width, this.height, radius);\n\n            ctx.fillStyle = \"#FFFFFF\";\n            ctx.font = Loira.Config.fontSize + \"px \" + Loira.Config.fontType;\n\n            if (personData){\n                for (let i:number = 0; i < personData.lines.length; i++) {\n                    let textW: number = ctx.measureText(personData.lines[i]).width;\n                    ctx.fillText(personData.lines[i], xm - textW / 2, y + 3);\n                    y = y + titleData.fontSize + 3;\n                }\n                y += 5;\n                ctx.font = 'bold ' + titleData.fontSize + 'px ' + Loira.Config.fontType;\n            }\n\n            if (titleData){\n                for (let i:number = 0; i < titleData.lines.length; i++) {\n                    let textW: number = ctx.measureText(titleData.lines[i]).width;\n                    ctx.fillText(titleData.lines[i], xm - textW / 2, y + 3);\n                    y = y + titleData.fontSize + 3;\n                }\n            }\n        }\n\n        recalculateBorders() {\n        }\n\n        obtainBorderPos(points: Loira.util.Line, ctx: CanvasRenderingContext2D): number {\n            return 0;\n        }\n\n        drawSelected(ctx: CanvasRenderingContext2D) {\n            this.isSelected = true;\n            this.render(ctx, this._canvas.virtualCanvas.x, this._canvas.virtualCanvas.y);\n        }\n\n        attach(canvas: Loira.Canvas): void {\n            super.attach(canvas);\n            let ctx = canvas.getContext();\n            let height: number = 0;\n\n            if (this.personName){\n                height += (Loira.Config.fontSize + 3) * super.splitText(ctx, this.personName).length + 5;\n            }\n\n            if (this.title){\n                height += (Loira.Config.fontSize + 3 - (this.personName? 3 : 0)) * super.splitText(ctx, this.title).length + 5;\n            }\n\n            this.height = height;\n\n            if (canvas.readOnly){\n                this.on(null);\n            }\n\n            if (this.isDuplicate) {\n                this.setDuplicate();\n            }\n        }\n\n        setDuplicate(): void{\n            let elements = (<Controller>this._canvas.controller).elements;\n            let cursor: Group = (<Controller>this._canvas.controller).getGroup(this).item;\n            let listing: Group[] = cursor.getAllParent();\n            let passed: boolean = true;\n\n            for (let i: number=0; i<listing.length; i++){\n                if (this.id && listing[i].role.id === this.id){\n                    this.title = ' ';\n                    this.id = '';\n                    passed = false;\n                    break;\n                }\n            }\n\n            if (passed){\n                for (let i: number=0; i < elements.length; i++){\n                    if (elements[i].role !== this && elements[i].role.id == this.id.trim() && !elements[i].role.isDuplicate){\n                        this.isDuplicate = true;\n                        this.on(null);\n                        this.rolePrimary = elements[i].role;\n                        break;\n                    }\n                }\n            }\n        }\n\n        update(data: {title: string, id: string}): void{\n            this.title = data.title;\n            this.id = data.id.trim();\n            this.setDuplicate();\n        }\n    }\n\n    /**\n     * Class for relation between roles\n     *\n     * @memberof OrgChart\n     * @class Relation\n     * @augments Common.Relation\n     */\n    export class Relation extends Common.Relation {\n        constructor(options: RelOption){\n            super(options);\n            this.type = 'orgchart:relation';\n        }\n\n        render(ctx: CanvasRenderingContext2D, vX: number, vY: number): void{\n            let start:Rect = new Rect(this.start.x - vX, this.start.y - vY, this.start.width, this.start.height),\n                end:Rect = new Rect(this.end.x - vX, this.end.y - vY, this.end.width, this.end.height),\n                middleLine: number,\n                init: Point;\n\n            middleLine = end.y - 10;\n\n            init = {x: start.x + start.width/2, y: start.y + start.height/2};\n\n            this.points[0] = init;\n            this.points[1] = {x: init.x, y: middleLine};\n            this.points[2] = {x: end.x + end.width/2, y: middleLine};\n            this.points[3] = {x: end.x + end.width/2, y: end.y + end.height/2};\n\n            ctx.beginPath();\n            ctx.lineWidth = 4;\n            ctx.strokeStyle = 'rgba(255,255,255,0.5)';\n            ctx.moveTo(init.x, init.y);\n            ctx.lineJoin = 'round';\n\n            for (let i:number = 1; i < this.points.length; i++){\n                ctx.lineTo(this.points[i].x, this.points[i].y);\n            }\n            ctx.stroke();\n        }\n    }\n}\n"]}